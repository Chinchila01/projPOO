<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_hbriMBnTEeaqg9F32W2naQ" name="project">
    <eAnnotations xmi:id="_hhPXoBnTEeaqg9F32W2naQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_hhSa8BnTEeaqg9F32W2naQ" source="codegen">
        <details xmi:id="_hhSa8RnTEeaqg9F32W2naQ" key="codegenDirectory" value="/project/src"/>
        <details xmi:id="_iZVdQBnTEeaqg9F32W2naQ" key="AssociatedSourceCode" value="/project/src/project/AceFiveStrategy.java;2128365787/1;/project/src/project/Advisor.java;2968352544/1;/project/src/project/BasicStrategy.java;2807404302/1;/project/src/project/Card.java;1716700331/1;/project/src/project/Chip.java;370855955/1;/project/src/project/Dealer.java;3295029569/1;/project/src/project/DealerInterface.java;1754677302/1;/project/src/project/Deck.java;1317764019/1;/project/src/project/Game.java;1950981325/1;/project/src/project/Hand.java;638715881/1;/project/src/project/HiLoStrategy.java;2028471318/1;/project/src/project/IllegalCmdException.java;381703979/1;/project/src/project/IllegalDeckNumberException.java;102098692/1;/project/src/project/IllegalHandException.java;3981436158/1;/project/src/project/Main.java;3161591540/1;/project/src/project/NoMoreCmdsException.java;1153628872/1;/project/src/project/NoPlayedRoundsException.java;43506214/1;/project/src/project/NotEnoughMoneyException.java;278859194/1;/project/src/project/NotParseableException.java;3677083568/1;/project/src/project/Player.java;534647663/1;/project/src/project/PlayerInterface.java;1370060074/1;/project/src/project/PlayingArea.java;70946892/1;/project/src/project/PlayingAreaDebug.java;1081565085/1;/project/src/project/PlayingAreaInteractive.java;842702187/1;/project/src/project/PlayingAreaSimulation.java;2307560690/1;/project/src/project/Pot.java;99233675/1;/project/src/project/Statistics.java;1219157621/1;/project/src/project/Shoe.java;3107402931/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_iGA4oBnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_iGA4oRnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_iGBfsBnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_iGBfsRnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_iGBfshnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_iGBfsxnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_iGBftBnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_iGBftRnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_iGCGwBnTEeaqg9F32W2naQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_iGEjABnTEeaqg9F32W2naQ" name="project">
      <packagedElement xmi:type="uml:Class" xmi:id="_iI2xQBnTEeaqg9F32W2naQ" name="AceFiveStrategy">
        <ownedComment xmi:id="_iQ2PoBnTEeaqg9F32W2naQ">
          <body>AceFiveStrategy class&#xD;
&#xD;
Advises the amount of the bet.&#xD;
&#xD;
@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iPeWoBnTEeaqg9F32W2naQ" name="minBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPe9sRnTEeaqg9F32W2naQ" name="maxBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPfkwRnTEeaqg9F32W2naQ" name="count" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPfkwhnTEeaqg9F32W2naQ" value="0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQXugBnTEeaqg9F32W2naQ" name="AceFiveStrategy" specification="_iI3_YBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQXugRnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQXughnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQXugxnTEeaqg9F32W2naQ" type="_iI2xQBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>this.minBet = minBet;&#xD;
		this.maxBet = maxBet;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQYVkBnTEeaqg9F32W2naQ" name="observeCard" specification="_iN63cBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQYVkRnTEeaqg9F32W2naQ" name="card" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>if(card.getSymbol() == '5')&#xD;
			count++;&#xD;
		else if(card.getSymbol() == 'A') &#xD;
			count--;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQYVkhnTEeaqg9F32W2naQ" name="adviseBet" specification="_iI5NgBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQYVkxnTEeaqg9F32W2naQ" name="lastBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQYVlBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(count>=2)&#xD;
			return lastBet*2;&#xD;
		if(count&lt;=1)&#xD;
			return minBet;&#xD;
		&#xD;
		// Should never reach here&#xD;
		return -1;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQY8oBnTEeaqg9F32W2naQ" name="reset" specification="_iI50kBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>count = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iI3_YBnTEeaqg9F32W2naQ" name="AceFiveStrategy" method="_iQXugBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iI4mcBnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iI4mcRnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iI3_YRnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI3_YhnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI4mchnTEeaqg9F32W2naQ" type="_iI2xQBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iI5NgBnTEeaqg9F32W2naQ" name="adviseBet" method="_iQYVkhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iI5NgRnTEeaqg9F32W2naQ" name="lastBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI5NghnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iI50kBnTEeaqg9F32W2naQ" name="reset" method="_iQY8oBnTEeaqg9F32W2naQ"/>
        <ownedOperation xmi:id="_iN63cBnTEeaqg9F32W2naQ" name="observeCard" method="_iQYVkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iN63cRnTEeaqg9F32W2naQ" name="card" type="_iJMIcBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iI7CsBnTEeaqg9F32W2naQ" name="Advisor">
        <ownedComment xmi:id="_iQ2PoRnTEeaqg9F32W2naQ">
          <body>Advisor class&#xD;
&#xD;
&#xD;
@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iPgy4BnTEeaqg9F32W2naQ" name="combination" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPgy4RnTEeaqg9F32W2naQ" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPiBABnTEeaqg9F32W2naQ" name="betStrategy" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPiBAhnTEeaqg9F32W2naQ" name="a5" visibility="package" type="_iI2xQBnTEeaqg9F32W2naQ" association="_iRNcARnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iPioERnTEeaqg9F32W2naQ" name="hls" visibility="package" type="_iJx-UBnTEeaqg9F32W2naQ" association="_iRODERnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iPjPIRnTEeaqg9F32W2naQ" name="useBasicStrat" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPj2MRnTEeaqg9F32W2naQ" name="useHiLo" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPkdQBnTEeaqg9F32W2naQ" name="useAF" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPlEUBnTEeaqg9F32W2naQ" name="stdStratBet" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPlrYRnTEeaqg9F32W2naQ" name="minBet" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPmScBnTEeaqg9F32W2naQ" name="maxBet" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQZjsBnTEeaqg9F32W2naQ" name="Advisor" specification="_iI834BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQZjsRnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQZjshnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQZjsxnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQZjtBnTEeaqg9F32W2naQ" type="_iI7CsBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>a5 = new AceFiveStrategy(minBet, maxBet);&#xD;
		hls = new HiLoStrategy();&#xD;
		useBasicStrat = (nbDecks >= 4); //use basic strategy if shoeSize >= 4&#xD;
		useHiLo = useBasicStrat;&#xD;
		useAF = true;&#xD;
		this.stdStratBet = minBet;&#xD;
		this.minBet = minBet;&#xD;
		this.maxBet = maxBet;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQZjtRnTEeaqg9F32W2naQ" name="Advisor" specification="_iI-GABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQZjthnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQaKwBnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQaKwRnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQaKwhnTEeaqg9F32W2naQ" name="comb">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQaKwxnTEeaqg9F32W2naQ" type="_iI7CsBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>String[] s = comb.split(&quot;-&quot;);&#xD;
		if(s.length == 1) useAF = false;&#xD;
		else {&#xD;
			useAF = true;&#xD;
			a5 = new AceFiveStrategy(minBet, maxBet);&#xD;
		}&#xD;
		if(s[0].equals(&quot;BS&quot;)){&#xD;
			useBasicStrat = true;&#xD;
			useHiLo = false;&#xD;
		}else {&#xD;
			useBasicStrat = false;&#xD;
			useHiLo = true;&#xD;
			hls = new HiLoStrategy();&#xD;
		}&#xD;
		this.stdStratBet = minBet;&#xD;
		this.minBet = minBet;&#xD;
		this.maxBet = maxBet;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQaKxBnTEeaqg9F32W2naQ" name="observeCard" specification="_iN8soBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQaKxRnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQaKxhnTEeaqg9F32W2naQ" name="decksLeft">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <language>java</language>
          <body>if(useAF) a5.observeCard(c);&#xD;
		if(useHiLo) hls.updateCount(c, decksLeft);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQaKxxnTEeaqg9F32W2naQ" name="advise" specification="_iN8soxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQaKyBnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQaKyRnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQaKyhnTEeaqg9F32W2naQ" name="dealerCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQaKyxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iQaKzBnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Hand h = player.getCurrHand();&#xD;
			boolean canInsure = !h.hitDone &amp;&amp; dealDone &amp;&amp; !h.standDone;&#xD;
			char hlStratChar = '0';&#xD;
			//String basicStrat = this.basicInterpret(dealDone,player,BasicStrategy.advise(h,dealerCard));&#xD;
			if(useHiLo) hlStratChar = hls.getStrat(h, dealerCard, canInsure);&#xD;
			&#xD;
			//if(useBasicStrat) System.out.println(&quot;basic\t&quot; + basicStrat);&#xD;
			//if(useHiLo &amp;&amp; useBasicStrat) System.out.println(&quot;hi-lo\t&quot; + ((hlStrat == '0') ? basicStrat : hlInterpret(hlStrat)));&#xD;
			&#xD;
			//String basicStrat = (useBasicStrat) ? this.basicInterpret(dealDone,player,BasicStrategy.advise(h,dealerCard)) : &quot;&quot;;&#xD;
			//String hlStrat = (useBasicStrat &amp;&amp; useHiLo) ? ((hlStratChar == '0') ? basicStrat : hlInterpret(hlStratChar)) : &quot;&quot;;&#xD;
			&#xD;
			String basicStrat = (useBasicStrat) ? BasicStrategy.advise(h,dealerCard) : &quot;&quot;;&#xD;
			String hlStrat = (useHiLo) ? ((hlStratChar == '0') ? BasicStrategy.advise(h,dealerCard) : String.valueOf(hlStratChar)) : &quot;&quot;;&#xD;
			&#xD;
			&#xD;
			String[] str = new String[2];&#xD;
			str[0] = basicStrat;&#xD;
			str[1] = hlStrat;&#xD;
			return str;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQax0BnTEeaqg9F32W2naQ" name="advise" specification="_iI_UIBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQax0RnTEeaqg9F32W2naQ" name="lastBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQax0hnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>//if(useAF) System.out.println(&quot;ace-five\tbet &quot; + a5.adviseBet(lastBet));&#xD;
		//else System.out.println(&quot;Standard\tbet &quot; + stdStratBet);&#xD;
		&#xD;
		if(useAF) return String.valueOf(a5.adviseBet(lastBet));&#xD;
		else return String.valueOf(stdStratBet);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQax0xnTEeaqg9F32W2naQ" name="cmdInterpret" specification="_iN9TtBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQax1BnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQax1RnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQax1hnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iQax1xnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQax2BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String str = (useBasicStrat) ? this.basicInterpret(dealDone, player, s[0]) : this.basicInterpret(dealDone,player,s[1]);&#xD;
		&#xD;
		if(str.equals(&quot;hit&quot;)) return &quot;h&quot;;&#xD;
		else if(str.equals(&quot;stand&quot;)) return &quot;s&quot;;&#xD;
		else if(str.equals(&quot;split&quot;)&amp;&amp; player.splitAvailable()) return &quot;p&quot;; &#xD;
		else if(str.equals(&quot;double&quot;) &amp;&amp; player.getCurrHand().doubleAvailable()) return &quot;2&quot;;&#xD;
		else if(str.equals(&quot;surrender&quot;) &amp;&amp; !player.getCurrHand().sideRuleDone()) return &quot;u&quot;;&#xD;
		else if(str.equals(&quot;insurance&quot;) &amp;&amp; !player.getCurrHand().sideRuleDone()) return &quot;i&quot;;&#xD;
		else return player.getCurrHand().getScore()>=17 ?  &quot;s&quot; : &quot;h&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQbY4BnTEeaqg9F32W2naQ" name="betInterpret" specification="_iJAiQBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQbY4RnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQbY4hnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;b &quot; + s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQbY4xnTEeaqg9F32W2naQ" name="basicInterpret" specification="_iN-h0BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQbY5BnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQbY5RnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQbY5hnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQbY5xnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if(s.equals(&quot;H&quot;) || s.equals(&quot;h&quot;)) return &quot;hit&quot;;&#xD;
		if(s.equals(&quot;S&quot;)|| s.equals(&quot;s&quot;)) return &quot;stand&quot;;&#xD;
		if(s.equals(&quot;P&quot;)|| s.equals(&quot;p&quot;)) return &quot;split&quot;;&#xD;
		if(s.equals(&quot;Dh&quot;)){&#xD;
			if(dealDone &amp;&amp; !player.getCurrHand().hitDone &amp;&amp; !player.getCurrHand().standDone ) return &quot;double&quot;;&#xD;
			else return &quot;hit&quot;;&#xD;
		}&#xD;
		if(s.equals(&quot;Ds&quot;) || s.equals(&quot;d&quot;)){&#xD;
			if(dealDone &amp;&amp; !player.getCurrHand().hitDone &amp;&amp; !player.getCurrHand().standDone ) return &quot;double&quot;;&#xD;
			else return &quot;stand&quot;;&#xD;
		}&#xD;
		if(s.equals(&quot;Rh&quot;) || s.equals(&quot;u&quot;)){&#xD;
			if(!player.getCurrHand().surrenderDone &amp;&amp; player.hand.size() == 1 &amp;&amp; dealDone &amp;&amp; !player.getCurrHand().hitDone &amp;&amp; !player.getCurrHand().standDone){&#xD;
				return &quot;surrender&quot;;&#xD;
			}&#xD;
			else return &quot;hit&quot;;&#xD;
		}&#xD;
		else return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQbY6BnTEeaqg9F32W2naQ" name="hlInterpret" specification="_iN_I4BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQbY6RnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQbY6hnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQbY6xnTEeaqg9F32W2naQ" name="hlStrats">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQbY7BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>char hlStrat = (hlStrats.length() == 1) ? hlStrats.charAt(0) : '0';&#xD;
		switch(hlStrat){&#xD;
			case 's': return &quot;stand&quot;;&#xD;
			case 'h': return &quot;hit&quot;;&#xD;
			case 'd': return &quot;double&quot;;&#xD;
			case 'u': return &quot;surrender&quot;;&#xD;
			case 'p': return &quot;split&quot;;&#xD;
			case 'i': return &quot;insurance&quot;;&#xD;
		}&#xD;
		&#xD;
		return basicInterpret(dealDone,player,hlStrats);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQb_8BnTEeaqg9F32W2naQ" name="updateStdStrat" specification="_iJCXcBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQb_8RnTEeaqg9F32W2naQ" name="playerLost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>stdStratBet += (playerLost) ? -minBet : minBet;&#xD;
		if(stdStratBet &lt; minBet) stdStratBet = minBet;&#xD;
		if(stdStratBet > maxBet) stdStratBet = maxBet;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQb_8hnTEeaqg9F32W2naQ" name="resetStrats" specification="_iJCXchnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>resetStdStrat();&#xD;
		if(useAF) a5.reset();&#xD;
		if(useHiLo) hls.reset();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQb_8xnTEeaqg9F32W2naQ" name="resetStdStrat" specification="_iJC-gBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>stdStratBet = minBet;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iI834BnTEeaqg9F32W2naQ" name="Advisor" method="_iQZjsBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iI9e8RnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iI9e8hnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iI834RnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI834hnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI9e8BnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI9e8xnTEeaqg9F32W2naQ" type="_iI7CsBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iI-GABnTEeaqg9F32W2naQ" name="Advisor" method="_iQZjtRnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iI-tEBnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iI-tERnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iI-GARnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI-GAhnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI-GAxnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI-GBBnTEeaqg9F32W2naQ" name="comb">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI-tEhnTEeaqg9F32W2naQ" type="_iI7CsBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iI_UIBnTEeaqg9F32W2naQ" name="advise" method="_iQax0BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iI_UIRnTEeaqg9F32W2naQ" name="lastBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iI_7MBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJAiQBnTEeaqg9F32W2naQ" name="betInterpret" method="_iQbY4BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJAiQRnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJAiQhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJCXcBnTEeaqg9F32W2naQ" name="updateStdStrat" method="_iQb_8BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJCXcRnTEeaqg9F32W2naQ" name="playerLost">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJCXchnTEeaqg9F32W2naQ" name="resetStrats" method="_iQb_8hnTEeaqg9F32W2naQ"/>
        <ownedOperation xmi:id="_iJC-gBnTEeaqg9F32W2naQ" name="resetStdStrat" method="_iQb_8xnTEeaqg9F32W2naQ"/>
        <ownedOperation xmi:id="_iN8soBnTEeaqg9F32W2naQ" name="observeCard" method="_iQaKxBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iN8soRnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iN8sohnTEeaqg9F32W2naQ" name="decksLeft">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iN8soxnTEeaqg9F32W2naQ" name="advise" method="_iQaKxxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iN8spBnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iN8spRnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iN9TsBnTEeaqg9F32W2naQ" name="dealerCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iN9TsRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iN9TshnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iN9TtBnTEeaqg9F32W2naQ" name="cmdInterpret" method="_iQax0xnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iN96wBnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iN96wRnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iN96whnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iN96xBnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iN96wxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iN-h0BnTEeaqg9F32W2naQ" name="basicInterpret" method="_iQbY4xnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iN-h0RnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iN-h0hnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iN-h0xnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iN-h1BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iN_I4BnTEeaqg9F32W2naQ" name="hlInterpret" method="_iQbY6BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iN_I4RnTEeaqg9F32W2naQ" name="dealDone">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iN_I4hnTEeaqg9F32W2naQ" name="player" type="_iKAAwxnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iN_I4xnTEeaqg9F32W2naQ" name="hlStrats">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iN_I5BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJIeEBnTEeaqg9F32W2naQ" name="BasicStrategy">
        <ownedComment xmi:id="_iQ2PohnTEeaqg9F32W2naQ">
          <body>BasicStrategy class&#xD;
&#xD;
&#xD;
@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iPngkBnTEeaqg9F32W2naQ" name="hardTable" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPngkRnTEeaqg9F32W2naQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPoHoRnTEeaqg9F32W2naQ" value="{ &#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;Rh&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;H&quot;, &quot;H&quot;, &quot;Rh&quot;, &quot;Rh&quot;, &quot;Rh&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPoHohnTEeaqg9F32W2naQ" name="softTable" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPoHoxnTEeaqg9F32W2naQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPousRnTEeaqg9F32W2naQ" value="{ &#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;Ds&quot;, &quot;Ds&quot;, &quot;Ds&quot;, &quot;Ds&quot;, &quot;S&quot;, &quot;S&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPoushnTEeaqg9F32W2naQ" name="pairsTable" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPousxnTEeaqg9F32W2naQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPoutRnTEeaqg9F32W2naQ" value="{ &#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;Dh&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;H&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;, &quot;H&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;S&quot;, &quot;P&quot;, &quot;P&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;},&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;{&quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;, &quot;P&quot;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; }"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQcnABnTEeaqg9F32W2naQ" name="advise" specification="_iOCMMBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQcnARnTEeaqg9F32W2naQ" name="playerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQcnAhnTEeaqg9F32W2naQ" name="dealerCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQcnAxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>int x, y;&#xD;
		&#xD;
		// choose table to use&#xD;
		if(!hasPairs(playerHand) &amp;&amp; !hasAces(playerHand)) {	// use hard table&#xD;
			&#xD;
			x = playerHand.getScore() - 5; // table starts at 5&#xD;
			if(dealerCard.getSymbol() != 'A')&#xD;
				y = dealerCard.getScore() - 2;&#xD;
			else&#xD;
				y = 9;&#xD;
			&#xD;
			return hardTable[x][y];&#xD;
			&#xD;
		}else if(hasAces(playerHand) &amp;&amp; !hasAcePair(playerHand)) {	// use soft table&#xD;
			&#xD;
			x = playerHand.getScore() - 13;&#xD;
			if(dealerCard.getSymbol() != 'A')&#xD;
				y = dealerCard.getScore() - 2;&#xD;
			else&#xD;
				y = 9;&#xD;
			&#xD;
			return softTable[x][y];&#xD;
			&#xD;
			&#xD;
		}else if(hasPairs(playerHand)) {	// use pairs table&#xD;
			Iterator&lt;Card> it = playerHand.cards.iterator();&#xD;
			Card c = it.next();&#xD;
			&#xD;
			if(c.getSymbol() != 'A')&#xD;
				x = c.getScore() - 2;&#xD;
			else&#xD;
				x = 9;&#xD;
			if(dealerCard.getSymbol() != 'A')&#xD;
				y = dealerCard.getScore() - 2;&#xD;
			else&#xD;
				y = 9;&#xD;
			&#xD;
			return pairsTable[x][y];&#xD;
		}&#xD;
		&#xD;
		// Should never reach here&#xD;
		return &quot;&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQcnBBnTEeaqg9F32W2naQ" name="hasPairs" specification="_iOCzQhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQcnBRnTEeaqg9F32W2naQ" name="hand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQcnBhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>Iterator&lt;Card> it = hand.cards.iterator();&#xD;
		if(it.next().getSymbol() == it.next().getSymbol())&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQdOEBnTEeaqg9F32W2naQ" name="hasAces" specification="_iOEBYBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQdOERnTEeaqg9F32W2naQ" name="hand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQdOEhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>for(Card c : hand.cards) {&#xD;
			if(c.getSymbol() == 'A' &amp;&amp; c.getScore() == 11)&#xD;
				return true;&#xD;
		}&#xD;
		&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQdOExnTEeaqg9F32W2naQ" name="hasAcePair" specification="_iOFPgBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQdOFBnTEeaqg9F32W2naQ" name="hand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQdOFRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>Iterator&lt;Card> it = hand.cards.iterator();&#xD;
		Card c = it.next();&#xD;
		if(c.getSymbol() == it.next().getSymbol() &amp;&amp; c.getSymbol() == 'A')&#xD;
			return true;&#xD;
		else&#xD;
			return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iOCMMBnTEeaqg9F32W2naQ" name="advise" isStatic="true" method="_iQcnABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOCMMRnTEeaqg9F32W2naQ" name="playerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOCMMhnTEeaqg9F32W2naQ" name="dealerCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOCzQBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOCzQhnTEeaqg9F32W2naQ" name="hasPairs" visibility="private" isStatic="true" method="_iQcnBBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iODaUBnTEeaqg9F32W2naQ" name="hand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iODaURnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOEBYBnTEeaqg9F32W2naQ" name="hasAces" visibility="private" isStatic="true" method="_iQdOEBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOEBYRnTEeaqg9F32W2naQ" name="hand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOEocBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOFPgBnTEeaqg9F32W2naQ" name="hasAcePair" visibility="private" isStatic="true" method="_iQdOExnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOFPgRnTEeaqg9F32W2naQ" name="hand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOFPghnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJMIcBnTEeaqg9F32W2naQ" name="Card">
        <ownedComment xmi:id="_iQ22sBnTEeaqg9F32W2naQ">
          <body>This class contains all methods that operate/are related to the Card object.

@author Filipe Correia
@author HÃ©lder Duarte
@author JoÃ£o Vieira
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iPpVwBnTEeaqg9F32W2naQ" name="suits" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPpVwRnTEeaqg9F32W2naQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPp80RnTEeaqg9F32W2naQ" value="new char[] {'C','D','S','H'}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPp80hnTEeaqg9F32W2naQ" name="symbols" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPp80xnTEeaqg9F32W2naQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPqj4RnTEeaqg9F32W2naQ" value="new char[] {'2','3','4','5','6','7','8','9','T','J','K','Q','A'}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPqj4hnTEeaqg9F32W2naQ" name="scores" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPqj4xnTEeaqg9F32W2naQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPrK8RnTEeaqg9F32W2naQ" value="new int[] {2,3,4,5,6,7,8,9,10,10,10,10,11}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPrK8hnTEeaqg9F32W2naQ" name="suit" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPsZEBnTEeaqg9F32W2naQ" name="symbol" visibility="private" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPtAIBnTEeaqg9F32W2naQ" name="score" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPtAIRnTEeaqg9F32W2naQ" name="isTurnedUp" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQd1IhnTEeaqg9F32W2naQ" name="Card" specification="_iJN9oBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQd1IxnTEeaqg9F32W2naQ" name="suit">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQd1JBnTEeaqg9F32W2naQ" name="symbol">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQd1JRnTEeaqg9F32W2naQ" name="score">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQd1JhnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>this.suit = suit;
		this.symbol = symbol;
		this.score = score;
		this.isTurnedUp = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQd1JxnTEeaqg9F32W2naQ" name="Card" specification="_iJOksBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQd1KBnTEeaqg9F32W2naQ" name="card">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQd1KRnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>this.score = getScoreFromSymbol(card);
		if(card.length()==3){
			this.symbol = 'T';
			this.suit = card.charAt(2);
		}
		else{
			this.symbol = card.charAt(0);
			this.suit = card.charAt(1);
		}
		this.isTurnedUp = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQecMBnTEeaqg9F32W2naQ" name="getScoreFromSymbol" specification="_iJPLwBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQecMRnTEeaqg9F32W2naQ" name="symbol">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQecMhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>char cSymbol=0;
		if(symbol.length() == 2)
			cSymbol = symbol.charAt(0);
		else if(symbol.length() == 3)	// Special case for 10
			cSymbol = 'T';
		else throw new NotParseableException(&quot;symbol received is too long&quot;);
		return scores[(new String(symbols)).indexOf(cSymbol)];
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQecMxnTEeaqg9F32W2naQ" name="getSymbol" specification="_iJPy0BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQecNBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>return symbol;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQecNRnTEeaqg9F32W2naQ" name="setScore" specification="_iJPy0hnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQecNhnTEeaqg9F32W2naQ" name="newScore">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>//The Ace has multiple possible values
		this.score = newScore;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQecNxnTEeaqg9F32W2naQ" name="toString" specification="_iJQZ4BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQecOBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s;
		String c;
		if(this.getSymbol()=='T')
			s = &quot;10&quot;;
		else
			s = Character.toString(this.getSymbol());
		c = Character.toString(this.getSuit());
				
		return &quot;[&quot; + s + c + &quot;]&quot;;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQfDQBnTEeaqg9F32W2naQ" name="hashCode" specification="_iJRA8hnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQfDQRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>final int prime = 31;
		int result = 1;
		result = prime * result + score;
		result = prime * result + suit;
		result = prime * result + symbol;
		return result;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQfDQhnTEeaqg9F32W2naQ" name="equals" specification="_iPFVExnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQfDQxnTEeaqg9F32W2naQ" name="obj" type="_iPFVERnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQfDRBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Card other = (Card) obj;
		if (score != other.score)
			return false;
		return true;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJN9oBnTEeaqg9F32W2naQ" name="Card" method="_iQd1IhnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJN9pBnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJN9pRnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iQ22sRnTEeaqg9F32W2naQ">
            <body>Card Constructor
	 * Constructor of a {@link Card} object
	 * 
	 * By default, the card is constructed turned up. 
	 * 
	 * @return new {@link Card} object
	 * @param suit of the card being created, according to {@link Card#suits}
	 * @param symbol of the card being created, according to {@link Card#types}
	 * @param score is the value of the card in blackjack</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJN9oRnTEeaqg9F32W2naQ" name="suit">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJN9ohnTEeaqg9F32W2naQ" name="symbol">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJN9oxnTEeaqg9F32W2naQ" name="score">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJN9phnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJOksBnTEeaqg9F32W2naQ" name="Card" method="_iQd1JxnTEeaqg9F32W2naQ" raisedException="_iJ_ZsBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJOkshnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJOksxnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iQ22shnTEeaqg9F32W2naQ">
            <body>Card Constructor
	 * Constructor of a {@link Card} object
	 * 
	 * By default, the card is constructed turned up. 
	 * 
	 * @return new {@link Card} object
	 * @param card String depicting card in format [symbol|suit]</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJOksRnTEeaqg9F32W2naQ" name="card">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJOktBnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJPLwBnTEeaqg9F32W2naQ" name="getScoreFromSymbol" visibility="private" method="_iQecMBnTEeaqg9F32W2naQ" raisedException="_iJ_ZsBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ22sxnTEeaqg9F32W2naQ">
            <body>Auxiliary method to create Card from String. 
	 * @see Card
	 * 
	 * @param symbol char depicting score of card
	 * @return score according to symbol</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJPLwRnTEeaqg9F32W2naQ" name="symbol">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJPLwhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJPy0BnTEeaqg9F32W2naQ" name="getSymbol" method="_iQecMxnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ22tBnTEeaqg9F32W2naQ">
            <body>Returns the symbol of the {@link Card} object, according to {@link Card#types}.
	 * @return suit of this card</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJPy0RnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJPy0hnTEeaqg9F32W2naQ" name="setScore" method="_iQecNRnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ22tRnTEeaqg9F32W2naQ">
            <body>Because the Ace card can have two different values (1 or 11),&lt;br> this method is needed to set the score according to what the&lt;br> player chose.
	 * @params newScore new score of the {@link Card} object</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJPy0xnTEeaqg9F32W2naQ" name="newScore">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJQZ4BnTEeaqg9F32W2naQ" name="toString" method="_iQecNxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJQZ4RnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJRA8hnTEeaqg9F32W2naQ" name="hashCode" method="_iQfDQBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJRA8xnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iPFVExnTEeaqg9F32W2naQ" name="equals" method="_iQfDQhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iPF8IBnTEeaqg9F32W2naQ" name="obj" type="_iPFVERnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iPF8IRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJUEQBnTEeaqg9F32W2naQ" name="Chip">
        <ownedComment xmi:id="_iQ22thnTEeaqg9F32W2naQ">
          <body>Chip Class&#xD;
Has a color and a respective value.&#xD;
&#xD;
@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iPuOQBnTEeaqg9F32W2naQ" name="color" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPuOQhnTEeaqg9F32W2naQ" name="value" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQfqUBnTEeaqg9F32W2naQ" name="Chip" specification="_iJUrUBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQfqURnTEeaqg9F32W2naQ" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQfqUhnTEeaqg9F32W2naQ" type="_iJUEQBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>switch(value) {&#xD;
		case 100:&#xD;
			this.color = 'b';&#xD;
			this.value = 100;&#xD;
			break;&#xD;
		case 25:&#xD;
			this.color = 'g';&#xD;
			this.value = 25;&#xD;
			break;&#xD;
		case 5:&#xD;
			this.color = 'r';&#xD;
			this.value = 5;&#xD;
			break;&#xD;
		case 1:&#xD;
			this.color = 'w';&#xD;
			this.value = 1;&#xD;
			break;&#xD;
		default:&#xD;
			//TODO: throw exception&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQfqUxnTEeaqg9F32W2naQ" name="Chip" specification="_iJVSZBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQfqVBnTEeaqg9F32W2naQ" name="color">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQfqVRnTEeaqg9F32W2naQ" type="_iJUEQBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>switch(color) {&#xD;
		case 'b':&#xD;
			this.color = 'b';&#xD;
			this.value = 100;&#xD;
			break;&#xD;
		case 'g':&#xD;
			this.color = 'g';&#xD;
			this.value = 25;&#xD;
			break;&#xD;
		case 'r':&#xD;
			this.color = 'r';&#xD;
			this.value = 5;&#xD;
			break;&#xD;
		case 'w':&#xD;
			this.color = 'w';&#xD;
			this.value = 1;&#xD;
			break;&#xD;
		default:&#xD;
			//TODO: throw exception&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQgRYBnTEeaqg9F32W2naQ" name="toString" specification="_iJV5dBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQgRYRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>StringBuilder sb = new StringBuilder();&#xD;
		sb.append(this.color);&#xD;
		sb.append(this.value);&#xD;
		return sb.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJUrUBnTEeaqg9F32W2naQ" name="Chip" method="_iQfqUBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJVSYRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJVSYhnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJVSYBnTEeaqg9F32W2naQ" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJVSYxnTEeaqg9F32W2naQ" type="_iJUEQBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJVSZBnTEeaqg9F32W2naQ" name="Chip" method="_iQfqUxnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJV5cRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJV5chnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJV5cBnTEeaqg9F32W2naQ" name="color">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJV5cxnTEeaqg9F32W2naQ" type="_iJUEQBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJV5dBnTEeaqg9F32W2naQ" name="toString" method="_iQgRYBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJWggBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJXuoBnTEeaqg9F32W2naQ" name="Dealer">
        <ownedAttribute xmi:id="_iPu1URnTEeaqg9F32W2naQ" name="hand" visibility="package" type="_iJm_MBnTEeaqg9F32W2naQ" association="_iROqIRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iPvcYRnTEeaqg9F32W2naQ" name="minBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQ3dwBnTEeaqg9F32W2naQ" name="maxBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_iOI54BnTEeaqg9F32W2naQ" client="_iJXuoBnTEeaqg9F32W2naQ" supplier="_iJcnIBnTEeaqg9F32W2naQ" contract="_iJcnIBnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQgRYhnTEeaqg9F32W2naQ" name="Dealer" specification="_iJYVsBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQgRYxnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQgRZBnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQgRZRnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQgRZhnTEeaqg9F32W2naQ" type="_iJXuoBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>this.minBet=minBet;&#xD;
		this.maxBet=maxBet;&#xD;
		hand = new Hand(null, null, maxBet, maxBet);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQg4cBnTEeaqg9F32W2naQ" name="hit" specification="_iOKIABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQg4cRnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQg4chnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>// se a carta recebida for um ace e fizer bust, ace passa a valer 1&#xD;
		Card c = s.getNext();&#xD;
		if(c.getSymbol() == 'A' &amp;&amp; hand.getScore() > 10) c.setScore(1);&#xD;
		hand.addCard(c);&#xD;
		return c;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQg4cxnTEeaqg9F32W2naQ" name="getHand" specification="_iJY8xBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQg4dBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>StringBuilder sb = new StringBuilder();&#xD;
		for(Card c : hand.getCards()) {&#xD;
			if(c.isTurnedUp)&#xD;
				sb.append(c.toString());&#xD;
			else&#xD;
				sb.append(&quot;[X]&quot;);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQg4dRnTEeaqg9F32W2naQ" name="resetHands" specification="_iOKvEBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQg4dhnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>s.addLast(hand.getCards());&#xD;
		hand = new Hand(null, null,minBet,maxBet);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQg4dxnTEeaqg9F32W2naQ" name="toString" specification="_iJaK4xnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQg4eBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;dealer's hand &quot; + getHand();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJYVsBnTEeaqg9F32W2naQ" name="Dealer" method="_iQgRYhnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJY8wRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJY8whnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJYVsRnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJYVshnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJY8wBnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJY8wxnTEeaqg9F32W2naQ" type="_iJXuoBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJY8xBnTEeaqg9F32W2naQ" name="getHand" method="_iQg4cxnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ4E0BnTEeaqg9F32W2naQ">
            <body>Gets the available hands from the dealer</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJZj0BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJZj0RnTEeaqg9F32W2naQ" name="stand"/>
        <ownedOperation xmi:id="_iJaK4xnTEeaqg9F32W2naQ" name="toString" method="_iQg4dxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJaK5BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOKIABnTEeaqg9F32W2naQ" name="hit" method="_iQg4cBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ3dwxnTEeaqg9F32W2naQ">
            <body>adds a card from the shoe to the dealer's hand</body>
          </ownedComment>
          <ownedParameter xmi:id="_iOKIARnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOKIAhnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iOKvEBnTEeaqg9F32W2naQ" name="resetHands" method="_iQg4dRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOKvERnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_iJcnIBnTEeaqg9F32W2naQ" name="DealerInterface">
        <ownedComment xmi:id="_iQ4E0RnTEeaqg9F32W2naQ">
          <body>PlayerInterface interface
Interface to the basic movements a BlackJack player can execute

@author Filipe Correia
@author HÃ©lder Duarte
@author JoÃ£o Vieira</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iJd1QBnTEeaqg9F32W2naQ" name="hand" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_iJdOMBnTEeaqg9F32W2naQ" name="stand">
          <ownedComment xmi:id="_iQ4E0xnTEeaqg9F32W2naQ">
            <body>This method is used to keep the player's hand as it is.
	 * 
	 * @see Stand</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iOMkQBnTEeaqg9F32W2naQ" name="hit">
          <ownedComment xmi:id="_iQ4E0hnTEeaqg9F32W2naQ">
            <body>This method is used to ask for one card that will be randomly picked from shoe
	 * 
	 * @param Shoe that contains all the decks
	 * @return card picked randomly
	 * @see Hit</body>
          </ownedComment>
          <ownedParameter xmi:id="_iOMkQRnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOMkQhnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iONLUBnTEeaqg9F32W2naQ" name="resetHands">
          <ownedParameter xmi:id="_iONLURnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJfDYBnTEeaqg9F32W2naQ" name="Deck">
        <ownedComment xmi:id="_iQ4E1BnTEeaqg9F32W2naQ">
          <body>Deck Class
This class contains all methods that operate/are related to the Deck object&lt;br>
A {@link Deck} is composed of 52 cards: &lt;br>
Number cards: 2,3,4,5,6,7,8,9,10&lt;br>
Face cards: A,J,Q,K&lt;br>
&lt;br>
The deck has each of the above cards in each of the 4 suits: Clubs, Diamonds, Spades, Hearts

@author Filipe Correia
@author HÃ©lder Duarte
@author JoÃ£o Vieira
@version 1.0</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iPwqgBnTEeaqg9F32W2naQ" name="cards" visibility="package" type="_iONyYBnTEeaqg9F32W2naQ" association="_iRPRMRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iPx4oRnTEeaqg9F32W2naQ" name="suits" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iPx4ohnTEeaqg9F32W2naQ" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iPx4pBnTEeaqg9F32W2naQ" value="new char[] {'C','D','S','H'}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPyfsBnTEeaqg9F32W2naQ" name="total" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPyfsRnTEeaqg9F32W2naQ" name="isEmpty" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iPzGwBnTEeaqg9F32W2naQ" name="isFull" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQiGkBnTEeaqg9F32W2naQ" name="Deck" specification="_iJfqcBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQiGkRnTEeaqg9F32W2naQ" type="_iJfDYBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>cards = new ArrayList&lt;Card>();
		//Creating number cards
		for(int i = 0; i &lt; 8; i++){
			for(int j= 0; j &lt; suits.length; j++){
				cards.add(new Card(Card.suits[j],Card.symbols[i],i+2));
				total++;
			}
		}
		//Creating tens
		for(int j = 0; j &lt; suits.length; j++){
				cards.add(new Card(Card.suits[j],Card.symbols[8],10)); 
				total++;
		}
		//Creating jacks
		for(int j = 0; j &lt; suits.length; j++){
			cards.add(new Card(Card.suits[j],Card.symbols[9],10)); 
			total++;
		}
		//Creating queens
		for(int j = 0; j &lt; suits.length; j++){
			cards.add(new Card(Card.suits[j],Card.symbols[10],10));
			total++;
		}
		//Creating kings
		for(int j = 0; j &lt; suits.length; j++){
			cards.add(new Card(Card.suits[j],Card.symbols[11],10));
			total++;
		}
		//Creating aces
		for(int j = 0; j &lt; suits.length; j++){
				cards.add(new Card(Card.suits[j],Card.symbols[12],11)); 
				total++;
		}
		
		isEmpty = false;
		isFull  = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQiGkhnTEeaqg9F32W2naQ" name="getNext" specification="_iJfqdBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQiGkxnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>ListIterator&lt;Card> iterator = cards.listIterator();
		Card aux = iterator.next();
		iterator.remove();
		total--;
		if(total == 0) isEmpty = true;
		if(total &lt; 52) isFull = false;
		return aux;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQiGlBnTEeaqg9F32W2naQ" name="addLast" specification="_iOPnkRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQiGlRnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>cards.add(total,c);
		total++;
		if(total != 0) isEmpty = false;
		if(total == 52) isFull = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQiGlhnTEeaqg9F32W2naQ" name="isEmpty" specification="_iJgRgBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQiGlxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.isEmpty;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQiGmBnTEeaqg9F32W2naQ" name="isFull" specification="_iJgRghnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQiGmRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.isFull;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQitoBnTEeaqg9F32W2naQ" name="toString" specification="_iJg4kRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQitoRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>ListIterator&lt;Card> it = cards.listIterator();
		StringBuilder sb = new StringBuilder();
		while(it.hasNext()){
			sb.append(it.next().toString());
			if(it.hasNext()) sb.append(&quot;,&quot;);
		}
		return sb.toString();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJfqcBnTEeaqg9F32W2naQ" name="Deck" method="_iQiGkBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJfqcRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJfqchnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iQ4E1RnTEeaqg9F32W2naQ">
            <body>&lt;p>Constructs a Deck object with 52 cards.&lt;/p>
	 * &lt;p>Consists of each of the following cards in the 4 {@link suits} available: &lt;br>
	 * 	Number cards: 2,3,4,5,6,7,8,9,10 &lt;br>
	 *  Face cards: A, J, Q, K &lt;/p>
	 * 
	 * @author Filipe Correia
	 * @author HÃ©lder Duarte
	 * @author JoÃ£o Vieira</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJfqcxnTEeaqg9F32W2naQ" type="_iJfDYBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJfqdBnTEeaqg9F32W2naQ" name="getNext" method="_iQiGkhnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ4E1hnTEeaqg9F32W2naQ">
            <body>Gets the card on top of the {@link Deck}
	 * 
	 * @return Card
	 * @see Deck
	 * @see Card</body>
          </ownedComment>
          <ownedParameter xmi:id="_iOPnkBnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJgRgBnTEeaqg9F32W2naQ" name="isEmpty" method="_iQiGlhnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ4r4BnTEeaqg9F32W2naQ">
            <body>Returns true if the deck has 0 cards
	 * @return isEmpty</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJgRgRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJgRghnTEeaqg9F32W2naQ" name="isFull" method="_iQiGmBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ4r4RnTEeaqg9F32W2naQ">
            <body>Returns true if the deck has 52 cards
	 * @return isFull</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJg4kBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJg4kRnTEeaqg9F32W2naQ" name="toString" method="_iQitoBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJg4khnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOPnkRnTEeaqg9F32W2naQ" name="addLast" method="_iQiGlBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ4E1xnTEeaqg9F32W2naQ">
            <body>Adds a {@link Card} to the bottom of the {@link Deck}
	 * 
	 * @param c {@link Card} object to be added to the {@link Deck}
	 * @return void
	 * @see Deck
	 * @see Card
	 * @see Deck.getNext</body>
          </ownedComment>
          <ownedParameter xmi:id="_iOPnkhnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJjU0BnTEeaqg9F32W2naQ" name="Game">
        <ownedAttribute xmi:id="_iPzt0BnTEeaqg9F32W2naQ" name="frmBlackjack" visibility="private" type="_iOSD0RnTEeaqg9F32W2naQ" association="_iRP4QRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iP0U4RnTEeaqg9F32W2naQ" name="textField" visibility="private" type="_iOYxgRnTEeaqg9F32W2naQ" association="_iRQfURnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQitohnTEeaqg9F32W2naQ" name="main" specification="_iJki8BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQitoxnTEeaqg9F32W2naQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iQitpBnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>PlayingArea pa = null;&#xD;
		EventQueue.invokeLater(new Runnable() {&#xD;
			public void run() {&#xD;
				try {&#xD;
					Game window = new Game();&#xD;
					window.frmBlackjack.setVisible(true);&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		if(args.length &lt; 1){ // minimum arg size&#xD;
			System.out.println(&quot;Not enough arguments&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
		&#xD;
		//Argument variables&#xD;
		int minBet, maxBet, nbDecks, shufflePercentage;&#xD;
		float initialMoney;&#xD;
		&#xD;
		//TODO: do argument checking&#xD;
		switch(args[0].charAt(1)) {&#xD;
		case 'i':&#xD;
			//Checking arguments&#xD;
			if(args.length &lt; 6){&#xD;
				System.out.println(&quot;Not enough arguments&quot;);&#xD;
				System.exit(1);&#xD;
			}&#xD;
			minBet = Integer.parseInt(args[1]);&#xD;
			maxBet = Integer.parseInt(args[2]);&#xD;
			initialMoney = Float.parseFloat(args[3]);&#xD;
			nbDecks = Integer.parseInt(args[4]);&#xD;
			shufflePercentage = Integer.parseInt(args[5]);&#xD;
			&#xD;
			pa = new PlayingAreaInteractive(minBet, maxBet, initialMoney, nbDecks, shufflePercentage);&#xD;
			break;&#xD;
		case 'd':&#xD;
			//Checking arguments&#xD;
			if(args.length &lt; 6){&#xD;
				System.out.println(&quot;Not enough arguments&quot;);&#xD;
				System.exit(1);&#xD;
			}&#xD;
			minBet = Integer.parseInt(args[1]);&#xD;
			maxBet = Integer.parseInt(args[2]);&#xD;
			initialMoney = Float.parseFloat(args[3]);&#xD;
			String shoefile = args[4];&#xD;
			String cmdFile = args[5];&#xD;
			&#xD;
			pa = new PlayingAreaDebug(minBet, maxBet, initialMoney, shoefile, cmdFile);&#xD;
			break;&#xD;
		case 's':&#xD;
			//Checking arguments&#xD;
			if(args.length &lt; 8){&#xD;
				System.out.println(&quot;Not enough arguments&quot;);&#xD;
				System.exit(1);&#xD;
			}&#xD;
			minBet = Integer.parseInt(args[1]);&#xD;
			maxBet = Integer.parseInt(args[2]);&#xD;
			initialMoney = Float.parseFloat(args[3]);&#xD;
			nbDecks = Integer.parseInt(args[4]);&#xD;
			shufflePercentage = Integer.parseInt(args[5]);&#xD;
			int nbShuffles = Integer.parseInt(args[6]);&#xD;
			String strategy =args[7];&#xD;
			&#xD;
			pa = new PlayingAreaSimulation(minBet, maxBet, initialMoney, nbDecks, shufflePercentage, nbShuffles, strategy);&#xD;
			break;&#xD;
			&#xD;
		case 'g':&#xD;
			try {&#xD;
				UIManager.setLookAndFeel(UIManager.getLookAndFeel());&#xD;
			} catch (UnsupportedLookAndFeelException e1) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e1.printStackTrace();&#xD;
			}&#xD;
			&#xD;
			&#xD;
			break;&#xD;
			&#xD;
		default: System.exit(-1);&#xD;
		}&#xD;
		&#xD;
		//PlayingAreaDebug pa = new PlayingAreaDebug(args);&#xD;
		&#xD;
		String cmd;&#xD;
		&#xD;
		while(pa.hasNextCommand()) {&#xD;
			&#xD;
			while(pa.player.getNextHand() != null) {	// player's turn&#xD;
				cmd = &quot;&quot;;&#xD;
				while(cmd.equals(&quot;&quot;)){&#xD;
					try{&#xD;
						cmd = pa.getCommand();	//get player input&#xD;
					}catch(NoMoreCmdsException e){&#xD;
						System.out.println(&quot;Game Over&quot;);&#xD;
						pa.quit();&#xD;
					}&#xD;
				}&#xD;
				&#xD;
				try {&#xD;
					pa.executePlayerAction(cmd);&#xD;
				} catch (IllegalCmdException e) {&#xD;
					System.out.println(e.getMessage());&#xD;
				}&#xD;
			}//end_player_turn&#xD;
			&#xD;
			//dealer turn&#xD;
			pa.dealerTurn();&#xD;
			&#xD;
			//payout time&#xD;
			pa.payOut();&#xD;
			&#xD;
			//reset hands&#xD;
			pa.prepareNextRound();&#xD;
			&#xD;
		}//end_rounds&#xD;
			&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQitpRnTEeaqg9F32W2naQ" name="Game" specification="_iJlKARnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQitphnTEeaqg9F32W2naQ" type="_iJjU0BnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>initialize();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQitpxnTEeaqg9F32W2naQ" name="initialize" specification="_iJlxERnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>frmBlackjack = new JFrame();&#xD;
		frmBlackjack.setTitle(&quot;BlackJack&quot;);&#xD;
		frmBlackjack.getContentPane().setBackground(new Color(0, 128, 0));&#xD;
		frmBlackjack.setBounds(100, 100, 600, 400);&#xD;
		frmBlackjack.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		frmBlackjack.getContentPane().setLayout(new BoxLayout(frmBlackjack.getContentPane(), BoxLayout.Y_AXIS));&#xD;
		&#xD;
		JPanel panel = new JPanel();&#xD;
		frmBlackjack.getContentPane().add(panel);&#xD;
		panel.setLayout(new GridLayout(1, 0, 0, 0));&#xD;
		&#xD;
		textField = new JTextField();&#xD;
		textField.setToolTipText(&quot;Minimum Bet&quot;);&#xD;
		panel.add(textField);&#xD;
		textField.setColumns(10);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJki8BnTEeaqg9F32W2naQ" name="main" isStatic="true" method="_iQitohnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ4r4hnTEeaqg9F32W2naQ">
            <body>Launch the application.</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJki8RnTEeaqg9F32W2naQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iJki8hnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJlKARnTEeaqg9F32W2naQ" name="Game" method="_iQitpRnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJlKAhnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJlKAxnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iQ4r4xnTEeaqg9F32W2naQ">
            <body>Create the application.</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJlxEBnTEeaqg9F32W2naQ" type="_iJjU0BnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJlxERnTEeaqg9F32W2naQ" name="initialize" visibility="private" method="_iQitpxnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ4r5BnTEeaqg9F32W2naQ">
            <body>Initialize the contents of the frame.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJm_MBnTEeaqg9F32W2naQ" name="Hand">
        <ownedComment xmi:id="_iQ4r5RnTEeaqg9F32W2naQ">
          <body>Hand class
A hand is composed of two or more cards.

@author Filipe Correia
@author Helder Duarte
@author Joao Vieira</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iP078BnTEeaqg9F32W2naQ" name="DOUBLE" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP078RnTEeaqg9F32W2naQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP1jABnTEeaqg9F32W2naQ" name="SURRENDER" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP1jARnTEeaqg9F32W2naQ" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP1jAhnTEeaqg9F32W2naQ" name="SPLIT" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP1jAxnTEeaqg9F32W2naQ" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP1jBBnTEeaqg9F32W2naQ" name="INSURANCE" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP2KEBnTEeaqg9F32W2naQ" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP2KERnTEeaqg9F32W2naQ" name="cards" visibility="package" type="_iONyYBnTEeaqg9F32W2naQ" association="_iRRGYRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iP2xIhnTEeaqg9F32W2naQ" name="curBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP3_QBnTEeaqg9F32W2naQ" name="busted" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP3_QhnTEeaqg9F32W2naQ" name="hasBlackjack" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP4mURnTEeaqg9F32W2naQ" name="insuranceDone" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP5NYBnTEeaqg9F32W2naQ" name="hitDone" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP5NYhnTEeaqg9F32W2naQ" name="standDone" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP50cRnTEeaqg9F32W2naQ" name="doubleDone" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP6bgRnTEeaqg9F32W2naQ" name="surrenderDone" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQ4r5hnTEeaqg9F32W2naQ" name="minBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQ5S8hnTEeaqg9F32W2naQ" name="maxBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQjUsBnTEeaqg9F32W2naQ" name="Hand" specification="_iObNwBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQjUsRnTEeaqg9F32W2naQ" name="first" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQjUshnTEeaqg9F32W2naQ" name="second" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQjUsxnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQjUtBnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQjUtRnTEeaqg9F32W2naQ" type="_iJm_MBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>cards = new ArrayList&lt;Card>();
		this.minBet = minBet;
		this.maxBet = maxBet;
		if(first != null){
			cards.add(first);
		}
		if(second != null){
			cards.add(second);
		}
		curBet=0;
		hitDone=false;
		standDone=false;
		doubleDone=false;
		surrenderDone=false;
		insuranceDone=false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQjUthnTEeaqg9F32W2naQ" name="getCards" specification="_iJpbcBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQjUtxnTEeaqg9F32W2naQ" type="_iONyYBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>return this.cards;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQjUuBnTEeaqg9F32W2naQ" name="addCard" specification="_iOb00xnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQjUuRnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>if(c != null) cards.add(c);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQj7wBnTEeaqg9F32W2naQ" name="getSize" specification="_iJqpkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQj7wRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return cards.size();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQj7whnTEeaqg9F32W2naQ" name="addBet" specification="_iJrQoRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQj7wxnTEeaqg9F32W2naQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQj7xBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(b &lt; 0) throw new IllegalCmdException(&quot;bet value is less than zero&quot;);
		if(b > maxBet) throw new IllegalCmdException(&quot;bet value is too high&quot;);
		if(b &lt; minBet) throw new IllegalCmdException(&quot;bet value is too low&quot;);
		curBet=curBet + b;
		return b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQj7xRnTEeaqg9F32W2naQ" name="getScore" specification="_iJsewBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQj7xhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int points=0;
		//TODO: testar se ha um Ã�s, se houver e fizer bust, mudar o valor para 1
		for(Card c : cards) {
			points += c.getScore();
		}
		
		if (points==21 &amp;&amp; this.getSize()==2) hasBlackjack=true;
		else if (points>21) busted=true;
		
		return points;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQj7xxnTEeaqg9F32W2naQ" name="sideRuleDone" specification="_iJsewhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQj7yBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return insuranceDone || doubleDone || surrenderDone;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQj7yRnTEeaqg9F32W2naQ" name="toString" specification="_iJtF0BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQj7yhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>StringBuilder sb = new StringBuilder();
		for(Card c : cards) {
			sb.append(c.toString());
		}
		return sb.toString();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQj7yxnTEeaqg9F32W2naQ" name="doubleAvailable" specification="_iJts4hnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQj7zBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return (this.getScore()>8 &amp;&amp; this.getScore()&lt;12 &amp;&amp; !sideRuleDone() &amp;&amp; !hitDone &amp;&amp; !standDone);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQki0BnTEeaqg9F32W2naQ" name="cardsEqual" specification="_iJuT8RnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQki0RnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>Iterator&lt;Card> it = cards.iterator();
		return it.next()==it.next();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJpbcBnTEeaqg9F32W2naQ" name="getCards" method="_iQjUthnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ56AhnTEeaqg9F32W2naQ">
            <body>Returns the cards that constitute this {@link Hand}
	 * @return the hand
	 * @see Hand
	 * @see Card</body>
          </ownedComment>
          <ownedParameter xmi:id="_iPJmgBnTEeaqg9F32W2naQ" type="_iONyYBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJqpkBnTEeaqg9F32W2naQ" name="getSize" method="_iQj7wBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ56BBnTEeaqg9F32W2naQ">
            <body>get number of cards in this hand
	 * @return integer number of cards in this hand
	 * @see Card</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJrQoBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJrQoRnTEeaqg9F32W2naQ" name="addBet" method="_iQj7whnTEeaqg9F32W2naQ" raisedException="_iJ1osBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ6hEBnTEeaqg9F32W2naQ">
            <body>Adds the value passed to the current bet, if it's higher than maxBet, adds maxBet instead
	 * @return value that was bet
	 * @see addBetValue</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJr3sBnTEeaqg9F32W2naQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJr3sRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJsewBnTEeaqg9F32W2naQ" name="getScore" method="_iQj7xRnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ6hERnTEeaqg9F32W2naQ">
            <body>Iterates over cards and returns sum of each card's score.
	 * 
	 * @return total score of hand</body>
          </ownedComment>
          <ownedParameter xmi:id="_iJsewRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJsewhnTEeaqg9F32W2naQ" name="sideRuleDone" method="_iQj7xxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJsewxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJtF0BnTEeaqg9F32W2naQ" name="toString" method="_iQj7yRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJtF0RnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJts4hnTEeaqg9F32W2naQ" name="doubleAvailable" method="_iQj7yxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJuT8BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJuT8RnTEeaqg9F32W2naQ" name="cardsEqual" method="_iQki0BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJuT8hnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iObNwBnTEeaqg9F32W2naQ" name="Hand" method="_iQjUsBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iOb00BnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iOb00RnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iQ56ARnTEeaqg9F32W2naQ">
            <body>Constructor for a Hand object. Needs 2 cards to be created, a minimum bet value and a maximum bet value
	 * 
	 * @param first card to add to the {@link Hand}
	 * @param second card to add to the {@link Hand}
	 * @param minimum bet value
	 * @param maximum bet value
	 * @see Card</body>
          </ownedComment>
          <ownedParameter xmi:id="_iObNwRnTEeaqg9F32W2naQ" name="first" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iObNwhnTEeaqg9F32W2naQ" name="second" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iObNwxnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iObNxBnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iOb00hnTEeaqg9F32W2naQ" type="_iJm_MBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iOb00xnTEeaqg9F32W2naQ" name="addCard" method="_iQjUuBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ56AxnTEeaqg9F32W2naQ">
            <body>Adds a card to the hand
	 * @param c is the card to be added
	 * @see Card</body>
          </ownedComment>
          <ownedParameter xmi:id="_iOb01BnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJx-UBnTEeaqg9F32W2naQ" name="HiLoStrategy">
        <ownedComment xmi:id="_iQ6hEhnTEeaqg9F32W2naQ">
          <body>HiLoStrategy class&#xD;
&#xD;
&#xD;
@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iP7poBnTEeaqg9F32W2naQ" name="runningCount" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP7poRnTEeaqg9F32W2naQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP8QsRnTEeaqg9F32W2naQ" name="trueCount" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP8QshnTEeaqg9F32W2naQ" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP83wRnTEeaqg9F32W2naQ" name="nbDecksLeft" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP83whnTEeaqg9F32W2naQ" value="0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQlJ4BnTEeaqg9F32W2naQ" name="HiLoStrategy" specification="_iJylYBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQlJ4RnTEeaqg9F32W2naQ" type="_iJx-UBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>runningCount = 0;&#xD;
		trueCount = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQlJ4hnTEeaqg9F32W2naQ" name="getValue" specification="_iJzMcxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQlJ4xnTEeaqg9F32W2naQ" name="rank">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQlJ5BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>switch(rank) {&#xD;
		case '2':&#xD;
		case '3':&#xD;
		case '4':&#xD;
		case '5':&#xD;
		case '6':&#xD;
			return 1;&#xD;
		case '7':&#xD;
		case '8':&#xD;
		case '9':&#xD;
			return 0;&#xD;
		case 'T':&#xD;
		case 'J':&#xD;
		case 'Q':&#xD;
		case 'K':&#xD;
		case 'A':&#xD;
			return -1;&#xD;
		default:&#xD;
			//TODO: throw exception&#xD;
		}&#xD;
		// should never reach here&#xD;
		return 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQlJ5RnTEeaqg9F32W2naQ" name="updateCount" specification="_iOffMBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQlJ5hnTEeaqg9F32W2naQ" name="newCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQlJ5xnTEeaqg9F32W2naQ" name="nbDecksLeft">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <language>java</language>
          <body>runningCount += getValue(newCard.getSymbol());&#xD;
		trueCount = runningCount/nbDecksLeft;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQlw8BnTEeaqg9F32W2naQ" name="getStrat" specification="_iOgGQBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQlw8RnTEeaqg9F32W2naQ" name="playerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQlw8hnTEeaqg9F32W2naQ" name="dealerCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQlw8xnTEeaqg9F32W2naQ" name="canInsure">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQlw9BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>/**&#xD;
		 * Illustrious18&#xD;
		 */&#xD;
		if(canInsure &amp;&amp; trueCount>=3) return 'i';&#xD;
		// 16vT&#xD;
		if(playerHand.getScore() == 16 &amp;&amp; dealerCard.getSymbol() == 'T') {&#xD;
			return (trueCount >= 0 ? 's' : 'h');&#xD;
		}&#xD;
		// 15vT&#xD;
		if(playerHand.getScore() == 15 &amp;&amp; dealerCard.getSymbol() == 'T') {&#xD;
			// Illustrious18 	return (trueCount >= 4 ? 's' : 'h');&#xD;
			// Fab4 			return (trueCount >= 0 ? 'u' : '0');&#xD;
			if(trueCount>0 &amp;&amp; trueCount&lt;3) return 'u';&#xD;
			if(trueCount>=4) return 's';&#xD;
			return 'h';&#xD;
		}&#xD;
		// TTv5&#xD;
		if(playerHand.cards.iterator().next().getSymbol() == 'T' &amp;&amp; playerHand.cards.iterator().next().getSymbol() == 'T' &amp;&amp; dealerCard.getSymbol() == '5') {&#xD;
			return (trueCount >= 5 ? 'p' : 's');&#xD;
		}&#xD;
		// TTv6&#xD;
		if(playerHand.cards.iterator().next().getSymbol() == 'T' &amp;&amp; playerHand.cards.iterator().next().getSymbol() == 'T' &amp;&amp; dealerCard.getSymbol() == '6') {&#xD;
			return (trueCount >= 4 ? 'p' : 's');&#xD;
		}&#xD;
		// 10vT&#xD;
		if(playerHand.getScore() == 10 &amp;&amp; dealerCard.getSymbol() == 'T') {&#xD;
			return (trueCount >= 4 ? 'd' : 'h');&#xD;
		}&#xD;
		// 12v3&#xD;
		if(playerHand.getScore() == 12 &amp;&amp; dealerCard.getSymbol() == '3') {&#xD;
			return (trueCount >= 2 ? 's' : 'h');&#xD;
		}&#xD;
		// 12v2&#xD;
		if(playerHand.getScore() == 12 &amp;&amp; dealerCard.getSymbol() == '2') {&#xD;
			return (trueCount >= 3 ? 's' : 'h');&#xD;
		}&#xD;
		// 11vA&#xD;
		if(playerHand.getScore() == 11 &amp;&amp; dealerCard.getSymbol() == 'A') {&#xD;
			return (trueCount >= 1 ? 'd' : 'h');&#xD;
		}&#xD;
		// 9v2&#xD;
		if(playerHand.getScore() == 9 &amp;&amp; dealerCard.getSymbol() == '2') {&#xD;
			return (trueCount >= 1 ? 'd' : 'h');&#xD;
		}&#xD;
		// 10vA&#xD;
		if(playerHand.getScore() == 10 &amp;&amp; dealerCard.getSymbol() == 'A') {&#xD;
			return (trueCount >= 4 ? 'd' : 'h');&#xD;
		}&#xD;
		// 9v7&#xD;
		if(playerHand.getScore() == 9 &amp;&amp; dealerCard.getSymbol() == '7') {&#xD;
			return (trueCount >= 3 ? 'd' : 'h');&#xD;
		}&#xD;
		// 16v9&#xD;
		if(playerHand.getScore() == 16 &amp;&amp; dealerCard.getSymbol() == '9') {&#xD;
			return (trueCount >= 5 ? 's' : 'h');&#xD;
		}&#xD;
		// 13v2&#xD;
		if(playerHand.getScore() == 13 &amp;&amp; dealerCard.getSymbol() == '2') {&#xD;
			return (trueCount >= -1 ? 's' : 'h');&#xD;
		}&#xD;
		// 12v4&#xD;
		if(playerHand.getScore() == 12 &amp;&amp; dealerCard.getSymbol() == '4') {&#xD;
			return (trueCount >= 0 ? 's' : 'h');&#xD;
		}&#xD;
		// 12v5&#xD;
		if(playerHand.getScore() == 12 &amp;&amp; dealerCard.getSymbol() == '5') {&#xD;
			return (trueCount >= -2 ? 's' : 'h');&#xD;
		}&#xD;
		// 12v6&#xD;
		if(playerHand.getScore() == 12 &amp;&amp; dealerCard.getSymbol() == '6') {&#xD;
			return (trueCount >= -1 ? 's' : 'h');&#xD;
		}&#xD;
		// 13v3&#xD;
		if(playerHand.getScore() == 13 &amp;&amp; dealerCard.getSymbol() == '3') {&#xD;
			return (trueCount >= -2 ? 's' : 'h');&#xD;
		}&#xD;
		&#xD;
		/**&#xD;
		 * Fab4&#xD;
		 */&#xD;
		// '0' means use basic strategy&#xD;
		// 14vT&#xD;
		if(playerHand.getScore() == 14 &amp;&amp; dealerCard.getSymbol() == 'T') {&#xD;
			return (trueCount >= -3 ? 'u' : '0');&#xD;
		}&#xD;
		// 15v9&#xD;
		if(playerHand.getScore() == 15 &amp;&amp; dealerCard.getSymbol() == '9') {&#xD;
			return (trueCount >= 2 ? 'u' : '0');&#xD;
		}&#xD;
		// 15vA&#xD;
		if(playerHand.getScore() == 15 &amp;&amp; dealerCard.getSymbol() == 'A') {&#xD;
			return (trueCount >= 1 ? 'u' : '0');&#xD;
		}&#xD;
				&#xD;
		&#xD;
		// default:&#xD;
		return '0';&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQlw9RnTEeaqg9F32W2naQ" name="reset" specification="_iJ0akBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>runningCount = 0;&#xD;
		trueCount = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJylYBnTEeaqg9F32W2naQ" name="HiLoStrategy" method="_iQlJ4BnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJzMcBnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJzMcRnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJzMchnTEeaqg9F32W2naQ" type="_iJx-UBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJzMcxnTEeaqg9F32W2naQ" name="getValue" method="_iQlJ4hnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJzMdBnTEeaqg9F32W2naQ" name="rank">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJzzgBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iJ0akBnTEeaqg9F32W2naQ" name="reset" method="_iQlw9RnTEeaqg9F32W2naQ"/>
        <ownedOperation xmi:id="_iOffMBnTEeaqg9F32W2naQ" name="updateCount" method="_iQlJ5RnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOffMRnTEeaqg9F32W2naQ" name="newCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOffMhnTEeaqg9F32W2naQ" name="nbDecksLeft">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOgGQBnTEeaqg9F32W2naQ" name="getStrat" method="_iQlw8BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOgGQRnTEeaqg9F32W2naQ" name="playerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOgGQhnTEeaqg9F32W2naQ" name="dealerCard" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOgGQxnTEeaqg9F32W2naQ" name="canInsure">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iOgGRBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ1osBnTEeaqg9F32W2naQ" name="IllegalCmdException">
        <generalization xmi:id="_iPMCwBnTEeaqg9F32W2naQ" general="_iPK0oBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iP9e0RnTEeaqg9F32W2naQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP-F4BnTEeaqg9F32W2naQ" value="1L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQlw9hnTEeaqg9F32W2naQ" name="IllegalCmdException" specification="_iJ2PwBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQlw9xnTEeaqg9F32W2naQ" type="_iJ1osBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;illegal bet&quot;);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQmYABnTEeaqg9F32W2naQ" name="IllegalCmdException" specification="_iJ220hnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQmYARnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQmYAhnTEeaqg9F32W2naQ" type="_iJ1osBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(s);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ2PwBnTEeaqg9F32W2naQ" name="IllegalCmdException" method="_iQlw9hnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ2PwRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ220BnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ220RnTEeaqg9F32W2naQ" type="_iJ1osBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJ220hnTEeaqg9F32W2naQ" name="IllegalCmdException" method="_iQmYABnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ221BnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ221RnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ220xnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJ221hnTEeaqg9F32W2naQ" type="_iJ1osBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ3d4BnTEeaqg9F32W2naQ" name="IllegalDeckNumberException">
        <generalization xmi:id="_iPMp0BnTEeaqg9F32W2naQ" general="_iPK0oBnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQmYAxnTEeaqg9F32W2naQ" name="IllegalDeckNumberException" specification="_iJ4E8BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQmYBBnTEeaqg9F32W2naQ" type="_iJ3d4BnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;number of decks must be between 2 and 8, try again&quot;);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ4E8BnTEeaqg9F32W2naQ" name="IllegalDeckNumberException" method="_iQmYAxnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ4E8RnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ4E8hnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ4E8xnTEeaqg9F32W2naQ" type="_iJ3d4BnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ4sABnTEeaqg9F32W2naQ" name="IllegalHandException">
        <generalization xmi:id="_iPMp0RnTEeaqg9F32W2naQ" general="_iPK0oBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iP-F4RnTEeaqg9F32W2naQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP-F4hnTEeaqg9F32W2naQ" value="1L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQmYBRnTEeaqg9F32W2naQ" name="IllegalHandException" specification="_iJ5TEBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQmYBhnTEeaqg9F32W2naQ" type="_iJ4sABnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;hand is illegal&quot;);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQmYBxnTEeaqg9F32W2naQ" name="IllegalHandException" specification="_iJ56IBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQm_EBnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQm_ERnTEeaqg9F32W2naQ" type="_iJ4sABnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(s);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ5TEBnTEeaqg9F32W2naQ" name="IllegalHandException" method="_iQmYBRnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ5TERnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ5TEhnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ5TExnTEeaqg9F32W2naQ" type="_iJ4sABnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iJ56IBnTEeaqg9F32W2naQ" name="IllegalHandException" method="_iQmYBxnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ56IhnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ56IxnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ56IRnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iJ56JBnTEeaqg9F32W2naQ" type="_iJ4sABnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ6hMBnTEeaqg9F32W2naQ" name="Main">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQm_EhnTEeaqg9F32W2naQ" name="main" specification="_iJ7IQBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQm_ExnTEeaqg9F32W2naQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iQm_FBnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>// TODO Auto-generated method stub
		/*Deck deck = new Deck();
		Hand hand;
		
		System.out.println(deck.toString());
		
		System.out.println(&quot;Next card: &quot; + deck.getNext());
		
		System.out.println(&quot;Deck state:&quot;);
		System.out.println(deck.toString());
		
		deck.addLast(deck.getNext());

		System.out.println(&quot;Deck state:&quot;);
		System.out.println(deck.toString());
		
		System.out.println(&quot;Creating a hand:&quot;);
		hand = new Hand(deck.getNext(),deck.getNext(),10,100);
		System.out.println(hand.toString());
		
		System.out.println(&quot;Deck state:&quot;);
		System.out.println(deck.toString());
		
		Shoe shoe1 = new Shoe(3);
		
		System.out.println(&quot;Shoe: &quot;);
		System.out.println(shoe1.toString());
		System.out.println(shoe1.isFull());
		shoe1.addLast(shoe1.getNext());
		System.out.println(shoe1.isFull());
		System.out.println(shoe1.toString());
		
		Pot pot = new Pot(1457);
		System.out.println(pot);*/
		
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ7IQBnTEeaqg9F32W2naQ" name="main" isStatic="true" method="_iQm_EhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iJ7IQRnTEeaqg9F32W2naQ" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iJ7vUBnTEeaqg9F32W2naQ" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ7vURnTEeaqg9F32W2naQ" name="NoMoreCmdsException">
        <generalization xmi:id="_iPNQ4BnTEeaqg9F32W2naQ" general="_iPK0oBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iP-s8BnTEeaqg9F32W2naQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP-s8RnTEeaqg9F32W2naQ" value="1L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQm_FRnTEeaqg9F32W2naQ" name="NoMoreCmdsException" specification="_iJ8WYBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQm_FhnTEeaqg9F32W2naQ" type="_iJ7vURnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;command file is out of commands&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ8WYBnTEeaqg9F32W2naQ" name="NoMoreCmdsException" method="_iQm_FRnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ8WYRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ8WYhnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ8WYxnTEeaqg9F32W2naQ" type="_iJ7vURnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ89cBnTEeaqg9F32W2naQ" name="NoPlayedRoundsException">
        <generalization xmi:id="_iPN38BnTEeaqg9F32W2naQ" general="_iPK0oBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iP-s8hnTEeaqg9F32W2naQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iP_UABnTEeaqg9F32W2naQ" value="1L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQnmIBnTEeaqg9F32W2naQ" name="NoPlayedRoundsException" specification="_iJ9kgBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQnmIRnTEeaqg9F32W2naQ" type="_iJ89cBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;No rounds were played yet&quot;);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ9kgBnTEeaqg9F32W2naQ" name="NoPlayedRoundsException" method="_iQnmIBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ9kgRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ9kghnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ9kgxnTEeaqg9F32W2naQ" type="_iJ89cBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ-LkBnTEeaqg9F32W2naQ" name="NotEnoughMoneyException">
        <generalization xmi:id="_iPOfABnTEeaqg9F32W2naQ" general="_iPK0oBnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQnmIhnTEeaqg9F32W2naQ" name="NotEnoughMoneyException" specification="_iJ-yoBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQnmIxnTEeaqg9F32W2naQ" type="_iJ-LkBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(&quot;Not enough money&quot;);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ-yoBnTEeaqg9F32W2naQ" name="NotEnoughMoneyException" method="_iQnmIhnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iJ-yoRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iJ-yohnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ-yoxnTEeaqg9F32W2naQ" type="_iJ-LkBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iJ_ZsBnTEeaqg9F32W2naQ" name="NotParseableException">
        <generalization xmi:id="_iPOfARnTEeaqg9F32W2naQ" general="_iPK0oBnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQnmJBnTEeaqg9F32W2naQ" name="NotParseableException" specification="_iJ_ZsRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQnmJRnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQnmJhnTEeaqg9F32W2naQ" type="_iJ_ZsBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(s);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iJ_ZsRnTEeaqg9F32W2naQ" name="NotParseableException" method="_iQnmJBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iKAAwBnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iKAAwRnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iJ_ZshnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKAAwhnTEeaqg9F32W2naQ" type="_iJ_ZsBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iKAAwxnTEeaqg9F32W2naQ" name="Player">
        <ownedAttribute xmi:id="_iP_UARnTEeaqg9F32W2naQ" name="playerMoney" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iP_7ERnTEeaqg9F32W2naQ" name="hand" visibility="package" type="_iONyYBnTEeaqg9F32W2naQ" association="_iRRtcRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQAiIhnTEeaqg9F32W2naQ" name="minBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQBJMhnTEeaqg9F32W2naQ" name="currHand" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQ7IIBnTEeaqg9F32W2naQ" name="maxBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_iOh7cBnTEeaqg9F32W2naQ" client="_iKAAwxnTEeaqg9F32W2naQ" supplier="_iKNcIBnTEeaqg9F32W2naQ" contract="_iKNcIBnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQoNMBnTEeaqg9F32W2naQ" name="Player" specification="_iKBO4BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQoNMRnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQoNMhnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQoNMxnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQoNNBnTEeaqg9F32W2naQ" type="_iKAAwxnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>playerMoney=initialMoney;
		this.minBet=minBet;
		this.maxBet=maxBet;
		hand = new ArrayList&lt;Hand>();
		hand.add(new Hand(null, null,minBet,maxBet));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQoNNRnTEeaqg9F32W2naQ" name="split" specification="_iOiigBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQoNNhnTEeaqg9F32W2naQ" name="h" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQoNNxnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>int tempIndex = currHand;
		if(h.getSize() != 2) throw new IllegalHandException(&quot;hand is too big&quot;);
		else{
				ListIterator&lt;Card> iterator = h.getCards().listIterator();
				Card aux = iterator.next();
				Card aux2 = iterator.next();
				
				if(!aux.equals(aux2)) throw new IllegalHandException(&quot;cards are not equal&quot;);
				this.addPlayerMoney(-h.curBet); //check if player has enough money
				
				iterator.remove();//remove last (repeated) card from hand
				hit(s);//get a card from shoe
				
				Hand newHand;
				newHand = new Hand(aux2,null,minBet,maxBet);
				hand.add(newHand);
				//temporarily change currHand to new hand
				currHand = hand.size()-1;
				hit(s); //Immediately get a new card for newHand
				currHand = tempIndex; //putting it back
				newHand.curBet=h.curBet; //set the same bet for newHand
				
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQoNOBnTEeaqg9F32W2naQ" name="insurance" specification="_iOjwoRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQoNORnTEeaqg9F32W2naQ" name="dealerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>if (dealerHand.getCards().iterator().next().getSymbol()!='A') throw new IllegalHandException(&quot;dealer does not have an Ace&quot;);
			Hand playerHand = hand.listIterator(currHand).next();
			if(playerHand.getSize() != 2) throw new IllegalHandException(&quot;not at the beginning of the hand&quot;);
			if(playerHand.surrenderDone) throw new IllegalHandException(&quot;player has already surrendered&quot;);
			if(playerHand.standDone) throw new IllegalHandException(&quot;player has standed, insurance not available&quot;);
			playerHand.insuranceDone = true;//insurance bet 
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQo0QBnTEeaqg9F32W2naQ" name="surrender" specification="_iOk-wBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQo0QRnTEeaqg9F32W2naQ" name="dealerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQo0QhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <language>java</language>
          <body>if(this.hand.size() != 1) throw new IllegalHandException(&quot;surrender is valid only if hand is not split&quot;);
		Hand currentHand = hand.listIterator(currHand).next();
		currentHand.surrenderDone = true;
		//No late surrender
		if(dealerHand.getSize() == 2 &amp;&amp; dealerHand.getScore() == 21) return 0;
		else return currentHand.curBet/2;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQo0QxnTEeaqg9F32W2naQ" name="doubleBet" specification="_iKB18BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQo0RBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>Hand h = hand.listIterator(currHand).next();
		if(!h.doubleAvailable()) 
			throw new IllegalHandException();
		addPlayerMoney(-h.curBet);
		try{
			h.addBet(h.curBet);
		}catch(IllegalCmdException e){
			addPlayerMoney(h.curBet);
			throw new IllegalHandException(e.getMessage());
		}
		h.doubleDone=true;
		return true;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQo0RRnTEeaqg9F32W2naQ" name="getPlayerMoney" specification="_iKDEEhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQo0RhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return playerMoney;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQo0RxnTEeaqg9F32W2naQ" name="addPlayerMoney" specification="_iKDrIhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQo0SBnTEeaqg9F32W2naQ" name="playerMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <language>java</language>
          <body>if(this.playerMoney + playerMoney &lt; 0) throw new NotEnoughMoneyException();
			this.playerMoney += playerMoney;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQpbUBnTEeaqg9F32W2naQ" name="getNextHand" specification="_iKESMxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQpbURnTEeaqg9F32W2naQ" type="_iJm_MBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>Hand h = hand.listIterator(currHand).next(); 
		if(h.busted || h.standDone || h.surrenderDone) { // means hand is not valid
			if(currHand >= this.hand.size()-1){
				currHand = 0;
				return null;
			}
			currHand++; //current hand not valid, increment
			System.out.println(&quot;playing &quot; + (currHand+1) + ((currHand+1)==1 ? &quot;st&quot; :( (currHand+1)==2 ? &quot;nd&quot; : ((currHand+1)==3 ? &quot;rd&quot; : &quot;th&quot;))) + &quot; hand...&quot;);
		}
		
		return hand.listIterator(currHand).next();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQpbUhnTEeaqg9F32W2naQ" name="stand" specification="_iKE5QxnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>hand.listIterator(currHand).next().standDone = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQpbUxnTEeaqg9F32W2naQ" name="getCurrHand" specification="_iKFgUxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQpbVBnTEeaqg9F32W2naQ" type="_iJm_MBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>return hand.listIterator(currHand).next();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQpbVRnTEeaqg9F32W2naQ" name="hit" specification="_iOmM4BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQpbVhnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iQpbVxnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>Hand h = getCurrHand();
		Card c = s.getNext();
		if(c.getSymbol() == 'A' &amp;&amp; h.getScore() > 10) 
			c.setScore(1);
		
		for(Card ca : h.getCards()){
			if(ca.getSymbol() == 'A') {
				if((c.getScore() + h.getScore()) &lt; 21) break;
				ca.setScore(1); 		
			}
		}
		
		h.addCard(c);
		return c;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQqCYBnTEeaqg9F32W2naQ" name="getHand" specification="_iKGHYhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQqCYRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>StringBuilder sb = new StringBuilder();
		Hand h = hand.listIterator(currHand).next();
		if(this.hand.size() > 1) sb.append(&quot;[&quot; + (currHand+1) + &quot;] &quot;); // se tivermos mais que uma mao, mostramos o index desta
		sb.append(h.toString());
		sb.append(&quot; (&quot; + h.getScore() + &quot;)\n&quot;);
		
		return sb.toString();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQqCYhnTEeaqg9F32W2naQ" name="resetHands" specification="_iOmz8hnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQqCYxnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>Iterator&lt;Hand> it = this.hand.iterator();
		while(it.hasNext()){
			s.addLast(it.next().getCards());
			it.remove();
		}
	
		hand.add(new Hand(null, null,minBet,maxBet));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQqCZBnTEeaqg9F32W2naQ" name="splitAvailable" specification="_iKHVgRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQqCZRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return (hand.size()&lt;4 &amp;&amp; getCurrHand().getSize()==2 &amp;&amp; getCurrHand().cardsEqual());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQqCZhnTEeaqg9F32W2naQ" name="toString" specification="_iKHVgxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQqCZxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return &quot;player's hand &quot; + getHand();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iKBO4BnTEeaqg9F32W2naQ" name="Player" method="_iQoNMBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iKBO5BnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iKBO5RnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iQ7vMRnTEeaqg9F32W2naQ">
            <body>Constructor for a Player object. Needs a object player to be created.
	 * 
	 * @param Object player
	 * @see Player Constructor</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKBO4RnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKBO4hnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKBO4xnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKBO5hnTEeaqg9F32W2naQ" type="_iKAAwxnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKB18BnTEeaqg9F32W2naQ" name="doubleBet" method="_iQo0QxnTEeaqg9F32W2naQ" raisedException="_iJ4sABnTEeaqg9F32W2naQ _iJ-LkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKCdABnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKDEEhnTEeaqg9F32W2naQ" name="getPlayerMoney" method="_iQo0RRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKDEExnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKDrIhnTEeaqg9F32W2naQ" name="addPlayerMoney" method="_iQo0RxnTEeaqg9F32W2naQ" raisedException="_iJ-LkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKDrIxnTEeaqg9F32W2naQ" name="playerMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKESMxnTEeaqg9F32W2naQ" name="getNextHand" method="_iQpbUBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOll0hnTEeaqg9F32W2naQ" type="_iJm_MBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKE5QxnTEeaqg9F32W2naQ" name="stand" method="_iQpbUhnTEeaqg9F32W2naQ"/>
        <ownedOperation xmi:id="_iKFgUxnTEeaqg9F32W2naQ" name="getCurrHand" method="_iQpbUxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOll0xnTEeaqg9F32W2naQ" type="_iJm_MBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKGHYhnTEeaqg9F32W2naQ" name="getHand" method="_iQqCYBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKGucBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKHVgRnTEeaqg9F32W2naQ" name="splitAvailable" method="_iQqCZBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKHVghnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKHVgxnTEeaqg9F32W2naQ" name="toString" method="_iQqCZhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKH8kBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOiigBnTEeaqg9F32W2naQ" name="split" method="_iQoNNRnTEeaqg9F32W2naQ" raisedException="_iJ4sABnTEeaqg9F32W2naQ _iJ-LkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOiigRnTEeaqg9F32W2naQ" name="h" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOiighnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iOjwoRnTEeaqg9F32W2naQ" name="insurance" method="_iQoNOBnTEeaqg9F32W2naQ" raisedException="_iJ4sABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOjwohnTEeaqg9F32W2naQ" name="dealerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iOk-wBnTEeaqg9F32W2naQ" name="surrender" method="_iQo0QBnTEeaqg9F32W2naQ" raisedException="_iJ4sABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOk-wRnTEeaqg9F32W2naQ" name="dealerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOk-whnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOmM4BnTEeaqg9F32W2naQ" name="hit" method="_iQpbVRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOmM4RnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOmM4hnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iOmz8hnTEeaqg9F32W2naQ" name="resetHands" method="_iQqCYhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOmz8xnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_iKNcIBnTEeaqg9F32W2naQ" name="PlayerInterface">
        <generalization xmi:id="_iOpQMBnTEeaqg9F32W2naQ" general="_iJcnIBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iKPRUBnTEeaqg9F32W2naQ" name="playerMoney" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iKP4YBnTEeaqg9F32W2naQ" name="nextHand" type="_iJm_MBnTEeaqg9F32W2naQ" isReadOnly="true" association="_iRMN4BnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iKQfcBnTEeaqg9F32W2naQ" name="currHand" type="_iJm_MBnTEeaqg9F32W2naQ" isReadOnly="true" association="_iRM08RnTEeaqg9F32W2naQ"/>
        <ownedOperation xmi:id="_iKOqQBnTEeaqg9F32W2naQ" name="doubleBet" raisedException="_iJ4sABnTEeaqg9F32W2naQ _iJ-LkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKOqQRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKPRURnTEeaqg9F32W2naQ" name="addPlayerMoney" raisedException="_iJ-LkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKPRUhnTEeaqg9F32W2naQ" name="playerMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iOp3QBnTEeaqg9F32W2naQ" name="split" raisedException="_iJ4sABnTEeaqg9F32W2naQ _iJ-LkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOp3QRnTEeaqg9F32W2naQ" name="h" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOp3QhnTEeaqg9F32W2naQ" name="s" type="_iK4KgBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iOqeUBnTEeaqg9F32W2naQ" name="insurance" raisedException="_iJ4sABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOqeURnTEeaqg9F32W2naQ" name="dealerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iOqeUhnTEeaqg9F32W2naQ" name="surrender" raisedException="_iJ4sABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iOqeUxnTEeaqg9F32W2naQ" name="dealerHand" type="_iJm_MBnTEeaqg9F32W2naQ"/>
          <ownedParameter xmi:id="_iOrFYBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iKTiwBnTEeaqg9F32W2naQ" name="PlayingArea" isAbstract="true">
        <ownedComment xmi:id="_iQ8WQBnTEeaqg9F32W2naQ">
          <body>@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iQC-YBnTEeaqg9F32W2naQ" name="minBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQDlcBnTEeaqg9F32W2naQ" name="maxBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQDlchnTEeaqg9F32W2naQ" name="previousBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQEMgRnTEeaqg9F32W2naQ" name="initialMoney" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQEzkRnTEeaqg9F32W2naQ" name="shoe" visibility="package" type="_iK4KgBnTEeaqg9F32W2naQ" association="_iRSUgRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQEzkxnTEeaqg9F32W2naQ" name="stat" visibility="package" type="_iKyq8BnTEeaqg9F32W2naQ" association="_iRS7kRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQFaoRnTEeaqg9F32W2naQ" name="dealDone" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQGBsRnTEeaqg9F32W2naQ" name="betDone" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQGBsxnTEeaqg9F32W2naQ" name="ad" visibility="package" type="_iI7CsBnTEeaqg9F32W2naQ" association="_iRTioRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQGowRnTEeaqg9F32W2naQ" name="player" visibility="package" type="_iKAAwxnTEeaqg9F32W2naQ" association="_iRUJsRnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQHP0BnTEeaqg9F32W2naQ" name="dealer" visibility="package" type="_iJXuoBnTEeaqg9F32W2naQ" association="_iRUwwRnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQrQgBnTEeaqg9F32W2naQ" name="PlayingArea" specification="_iKV_ABnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQrQgRnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQrQghnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQrQgxnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQrQhBnTEeaqg9F32W2naQ" type="_iKTiwBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>this.minBet = minBet;&#xD;
		this.maxBet = maxBet;&#xD;
		this.previousBet = minBet;&#xD;
		this.initialMoney = initialMoney;&#xD;
		this.stat = new Statistics(initialMoney);&#xD;
		dealDone=false;&#xD;
		betDone=false;&#xD;
		player = new Player(initialMoney, minBet, maxBet);&#xD;
		dealer = new Dealer(initialMoney, minBet, maxBet);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQrQhRnTEeaqg9F32W2naQ" name="executePlayerAction" specification="_iKWmExnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQrQhhnTEeaqg9F32W2naQ" name="cmd">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>int bet=0;&#xD;
		Hand playerCurrHand = player.getCurrHand();&#xD;
		String[] cmdHelper;&#xD;
		&#xD;
		if(cmd.charAt(0)=='b' &amp;&amp; (cmd.length() == 1 || cmd.charAt(1)==' ')) {&#xD;
			if(dealDone==true) throw new IllegalCmdException(&quot;b: illegal command&quot;);&#xD;
			&#xD;
			if(cmd.length()==1)		//betting without specifying value will default to last bet&#xD;
				bet = this.previousBet;&#xD;
			else if(cmd.length()>1) {&#xD;
				cmdHelper = cmd.split(&quot; &quot;);&#xD;
				try{&#xD;
					bet = Integer.parseInt(cmdHelper[1]);&#xD;
				}catch(NumberFormatException e){&#xD;
					throw new IllegalCmdException();&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			try{&#xD;
				player.addPlayerMoney(-bet);&#xD;
				playerCurrHand.addBet(bet);&#xD;
			}catch(NotEnoughMoneyException e){&#xD;
				handleMoneyException(&quot;betting not possible: &quot; + e.getMessage());&#xD;
			}catch(IllegalCmdException e){&#xD;
				printMessage(&quot;betting not possible: &quot; + e.getMessage());&#xD;
				try{&#xD;
					player.addPlayerMoney(bet);&#xD;
				}catch(NotEnoughMoneyException ex){&#xD;
					printMessage(&quot;bet reversing not possible, please restart the game&quot;);&#xD;
					printMessage(e.getMessage());&#xD;
				}&#xD;
			}
			printMessage(&quot;Player is betting &quot;+bet);&#xD;
			this.previousBet = playerCurrHand.curBet;
			betDone=true;&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;$&quot;)) {	// prints current player balance&#xD;
			printMessage(&quot;Current balance: &quot; + player.getPlayerMoney());&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;d&quot;)) {	// deal&#xD;
			&#xD;
			if(betDone==false) throw new IllegalCmdException(&quot;d: illegal command&quot;);&#xD;
			&#xD;
			if(dealDone==false) {&#xD;
								&#xD;
				// give cards to dealer&#xD;
				ad.observeCard(dealer.hit(shoe),shoe.getDecksLeft());&#xD;
				ad.observeCard(dealer.hit(shoe),shoe.getDecksLeft());			&#xD;
				dealer.hand.getCards().listIterator(1).next().isTurnedUp = false;&#xD;
				&#xD;
				// give cards to player&#xD;
				ad.observeCard(player.hit(shoe),shoe.getDecksLeft());&#xD;
				ad.observeCard(player.hit(shoe),shoe.getDecksLeft());&#xD;
			}&#xD;
			&#xD;
			printMessage(dealer);&#xD;
			printMessage(player);&#xD;
			&#xD;
			dealDone=true;&#xD;
			&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;h&quot;)) {	// hit&#xD;
			&#xD;
			if(dealDone==false) throw new IllegalCmdException(&quot;h: illegal command&quot;);&#xD;
			&#xD;
			ad.observeCard(player.hit(shoe),shoe.getDecksLeft());&#xD;
			printMessage(&quot;player hits&quot;);&#xD;
			printMessage(player);&#xD;
			if(playerCurrHand.busted) {&#xD;
				printMessage(&quot;player busts&quot; + ((player.currHand > 0) ? (&quot; [&quot; + (player.currHand+1) + &quot;]&quot;):&quot;&quot;));&#xD;
			}&#xD;
			playerCurrHand.hitDone=true;&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;s&quot;)) {	//stand&#xD;
			&#xD;
			if(dealDone==false) throw new IllegalCmdException(&quot;s: illegal command&quot;);&#xD;
			&#xD;
			//if(itPlayer.hasNext()) &#xD;
			//	playerCurrHand=itPlayer.next();//gets next hand if exists&#xD;
			//else pa.validHands = false;&#xD;
			&#xD;
			player.stand();&#xD;
			playerCurrHand.standDone=true;&#xD;
			if(player.hand.size() == 1)&#xD;
				printMessage(&quot;player stands&quot;);&#xD;
			else {&#xD;
				printMessage(&quot;player stands [&quot; + (player.currHand+1) + &quot;]&quot; );&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(cmd.equals(&quot;i&quot;)) {	// insurance&#xD;
			&#xD;
			if(!dealDone || playerCurrHand.hitDone || playerCurrHand.standDone) throw new IllegalCmdException(&quot;i: illegal command&quot;);&#xD;
			&#xD;
			try{&#xD;
				player.addPlayerMoney(-playerCurrHand.curBet);&#xD;
				player.insurance(dealer.hand);&#xD;
			}catch(NotEnoughMoneyException e){&#xD;
				printMessage(&quot;insurance not possible: &quot; + e.getMessage());&#xD;
				return;&#xD;
			}catch(IllegalHandException e){&#xD;
				printMessage(&quot;insurance not possible: &quot; + e.getMessage());&#xD;
				try{&#xD;
					player.addPlayerMoney(playerCurrHand.curBet);&#xD;
					return;&#xD;
				}catch(NotEnoughMoneyException e1){&#xD;
					printMessage(e1.getMessage());&#xD;
					return;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;u&quot;)) {	// surrender&#xD;
&#xD;
			if(!dealDone || playerCurrHand.surrenderDone || playerCurrHand.hitDone || playerCurrHand.standDone) &#xD;
				throw new IllegalCmdException(&quot;u: illegal command&quot;);&#xD;
			&#xD;
			float money = 0;&#xD;
			try {&#xD;
				money = player.surrender(dealer.hand);&#xD;
				player.addPlayerMoney(money);&#xD;
			} catch(IllegalHandException e){&#xD;
				printMessage(&quot;surrender not possible: &quot; + e.getMessage());&#xD;
			} catch(NotEnoughMoneyException e){&#xD;
				printMessage(&quot;surrender not possible: &quot; + e.getMessage());&#xD;
				try{&#xD;
					player.addPlayerMoney(-money);&#xD;
				}catch(NotEnoughMoneyException ex){&#xD;
					printMessage(e.getMessage());&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			//if(itPlayer.hasNext()) &#xD;
			//	playerCurrHand=itPlayer.next();//gets next hand if exists&#xD;
			//else pa.validHands = false;&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;p&quot;)) {	// splitting&#xD;
&#xD;
			if(!dealDone || playerCurrHand.hitDone || playerCurrHand.standDone) throw new IllegalCmdException(&quot;p: illegal command&quot;);&#xD;
			&#xD;
			try{&#xD;
				player.split(playerCurrHand, shoe);&#xD;
				printMessage(&quot;Player is spliting...&quot;);&#xD;
				printMessage(&quot;Playing &quot;  + player.hand.size()/2 + &quot;st hand...&quot;);&#xD;
				printMessage(&quot;Player's hand [&quot; + (player.currHand+1) + &quot;] &quot; + playerCurrHand);&#xD;
				return;&#xD;
			} catch(IllegalHandException e){&#xD;
				printMessage(e.getMessage());&#xD;
				printMessage(&quot;split not available&quot;);&#xD;
				return;&#xD;
			} catch(NotEnoughMoneyException e){&#xD;
				handleMoneyException(&quot;split not possible: &quot; + e.getMessage());&#xD;
			}&#xD;
			&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;2&quot;)) {	// double&#xD;
&#xD;
			if(!dealDone || playerCurrHand.hitDone || playerCurrHand.standDone) throw new IllegalCmdException(&quot;2: illegal command&quot;);&#xD;
			&#xD;
			try {&#xD;
				player.doubleBet();&#xD;
				printMessage(&quot;bet doubled&quot;);&#xD;
				return;&#xD;
			} catch (IllegalHandException e) {&#xD;
				printMessage(&quot;doubling not possible: &quot; + e.getMessage());&#xD;
				return;&#xD;
			} catch (NotEnoughMoneyException e) {&#xD;
				handleMoneyException(&quot;doubling not possible: &quot; + e.getMessage());&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(cmd.equals(&quot;ad&quot;)) {	// advice&#xD;
			if(!betDone) printMessage(&quot;bet\t &quot; + ad.advise(previousBet));&#xD;
			else if(!dealDone) printMessage(&quot;deal&quot;);&#xD;
			else {&#xD;
				String[] strategies = ad.advise(dealDone, player, dealer.hand.cards.iterator().next());&#xD;
				&#xD;
				if(!strategies[0].equals(&quot;&quot;)) printMessage(&quot;basic\t&quot; + ad.basicInterpret(dealDone, player, strategies[0]));&#xD;
				if(!strategies[1].equals(&quot;&quot;)) printMessage(&quot;hilo\t&quot; + ((strategies[1].length() &lt; 2) ? ad.hlInterpret(dealDone,player,strategies[1]) : ad.basicInterpret(dealDone, player, strategies[1])));&#xD;
			}&#xD;
		}&#xD;
			&#xD;
		if(cmd.equals(&quot;st&quot;)) {	// statistics&#xD;
			try{&#xD;
				stat.presentStatistics();&#xD;
			}catch(NoPlayedRoundsException e){&#xD;
				printMessage(&quot;statistics unavailable: &quot; + e.getMessage());&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(cmd.equals(&quot;q&quot;)) {	// player inputs 'q' to quit the game&#xD;
			this.quit();&#xD;
		}&#xD;
				&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQrQhxnTEeaqg9F32W2naQ" name="payOut" specification="_iKXNIBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>for(Hand eachHand : player.hand){&#xD;
			 &#xD;
			//TODO: escolher valor do as&#xD;
			if(eachHand.surrenderDone){&#xD;
				printMessage(&quot;player's current balance is &quot; + player.getPlayerMoney());&#xD;
				ad.updateStdStrat(true);&#xD;
				stat.addLoss();&#xD;
			}&#xD;
			// O jogador tem um blackjack&#xD;
			else if(eachHand.hasBlackjack){&#xD;
				stat.addPlayerBJ();&#xD;
				if(dealer.hand.hasBlackjack) { // dealer tambem tem blackjack&#xD;
					if(eachHand.insuranceDone) {&#xD;
						try{&#xD;
							player.addPlayerMoney(eachHand.curBet); //the player gets twice the current money&#xD;
						}catch(NotEnoughMoneyException e){&#xD;
							printMessage(e.getMessage());&#xD;
						}&#xD;
					}&#xD;
					try{&#xD;
						player.addPlayerMoney(eachHand.curBet);&#xD;
					}catch(NotEnoughMoneyException e){&#xD;
						printMessage(e.getMessage());&#xD;
					}&#xD;
					&#xD;
					printMessage(&quot;blackjack!!&quot;);&#xD;
					printMessage(&quot;player pushes and his current balance is &quot; + player.getPlayerMoney());&#xD;
					// Update statistics&#xD;
					stat.addPush();&#xD;
					stat.addDealerBJ();&#xD;
					//update stdstrat&#xD;
				}&#xD;
				else{ // dealer nao tem blackjack&#xD;
					try{&#xD;
						player.addPlayerMoney((float)2.5*eachHand.curBet);&#xD;
					} catch(NotEnoughMoneyException e){&#xD;
						printMessage(e.getMessage());&#xD;
					}&#xD;
					printMessage(&quot;player wins with a blackjack and his current balance is &quot; + player.getPlayerMoney());&#xD;
					stat.addWin();&#xD;
					ad.updateStdStrat(false);&#xD;
				}&#xD;
			}&#xD;
			else if(eachHand.busted){&#xD;
				printMessage(&quot;player loses and his current balance is &quot; + player.getPlayerMoney());&#xD;
				stat.addLoss();&#xD;
				ad.updateStdStrat(true);&#xD;
			}&#xD;
			else if(dealer.hand.busted) {	// dealer Bust&#xD;
				try{&#xD;
					player.addPlayerMoney(2*eachHand.curBet);&#xD;
				}catch(NotEnoughMoneyException e){&#xD;
					printMessage(e.getMessage());&#xD;
				}&#xD;
				printMessage(&quot;player wins and his current balance is &quot; + player.getPlayerMoney());&#xD;
				stat.addWin();&#xD;
				ad.updateStdStrat(false);&#xD;
			}&#xD;
			else if(dealer.hand.hasBlackjack &amp;&amp; eachHand.insuranceDone){&#xD;
				try{&#xD;
					player.addPlayerMoney(eachHand.curBet);&#xD;
				}catch(NotEnoughMoneyException e){&#xD;
					printMessage(e.getMessage());&#xD;
				}&#xD;
			}&#xD;
			else if(dealer.hand.getScore() > eachHand.getScore()) { // player bust ou dealer tem mais pontos&#xD;
				printMessage(&quot;player loses and his current balance is &quot; + player.getPlayerMoney());&#xD;
				stat.addLoss();&#xD;
				ad.updateStdStrat(true);&#xD;
			}&#xD;
			else if(eachHand.getScore() == dealer.hand.getScore()){&#xD;
				try{&#xD;
					player.addPlayerMoney(eachHand.curBet);&#xD;
				}catch(NotEnoughMoneyException e){&#xD;
					printMessage(e.getMessage());&#xD;
				}&#xD;
				printMessage(&quot;player pushes and his current balance is &quot; + player.getPlayerMoney());&#xD;
				stat.addPush();&#xD;
			}&#xD;
			else { //player tem mais pontos&#xD;
				try{&#xD;
					player.addPlayerMoney(2*eachHand.curBet);&#xD;
				}catch(NotEnoughMoneyException e){&#xD;
					printMessage(e.getMessage());&#xD;
				}&#xD;
				printMessage(&quot;player wins and his current balance is &quot; + player.getPlayerMoney());&#xD;
				stat.addWin();&#xD;
				ad.updateStdStrat(false);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		stat.setBalance(player.getPlayerMoney());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQr3kBnTEeaqg9F32W2naQ" name="dealerTurn" specification="_iKXNIRnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>Hand dealerCurrHand = dealer.hand;&#xD;
		dealerCurrHand.getCards().listIterator(1).next().isTurnedUp = true; //turn hole&#xD;
		&#xD;
		printMessage(&quot;dealer's hand &quot; + dealer.getHand() + &quot; (&quot; + dealerCurrHand.getScore() + &quot;)&quot;);&#xD;
		&#xD;
		while(dealerCurrHand.getScore() &lt; 17) { //dealer stands on all 17s&#xD;
			ad.observeCard(dealer.hit(shoe),shoe.getDecksLeft());&#xD;
			printMessage(&quot;dealer hits&quot;);&#xD;
			printMessage(&quot;dealer's hand &quot; + dealer.getHand() + &quot; (&quot; + dealerCurrHand.getScore() + &quot;)&quot;);&#xD;
		}&#xD;
		&#xD;
		if(dealerCurrHand.hasBlackjack) {&#xD;
			printMessage(&quot;blackjack!!&quot;);&#xD;
		}&#xD;
		&#xD;
		printMessage(&quot;dealer stands&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQr3kRnTEeaqg9F32W2naQ" name="prepareNextRound" specification="_iKX0MBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>player.resetHands(shoe);&#xD;
		dealer.resetHands(shoe);&#xD;
		&#xD;
		dealDone=false;&#xD;
		betDone=false;		&#xD;
		&#xD;
		printMessage(&quot;Starting a new round&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQr3khnTEeaqg9F32W2naQ" name="hasNextCommand" specification="_iKYbQBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQr3kxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQr3lBnTEeaqg9F32W2naQ" name="printMessage" specification="_iKZCUBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQr3lRnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.println(s);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQseoBnTEeaqg9F32W2naQ" name="printMessage" specification="_iPQUMBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQseoRnTEeaqg9F32W2naQ" name="o" type="_iPFVERnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>printMessage(o.toString());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQseohnTEeaqg9F32W2naQ" name="handleMoneyException" specification="_iKZpYBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQseoxnTEeaqg9F32W2naQ" name="e">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.println(e);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iKV_ABnTEeaqg9F32W2naQ" name="PlayingArea" method="_iQrQgBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iKWmEBnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iKWmERnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iKV_ARnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKV_AhnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKV_AxnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKWmEhnTEeaqg9F32W2naQ" type="_iKTiwBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKWmExnTEeaqg9F32W2naQ" name="executePlayerAction" method="_iQrQhRnTEeaqg9F32W2naQ" raisedException="_iJ1osBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ89UBnTEeaqg9F32W2naQ">
            <body>Takes in a command and executes the command accordingly&#xD;
	 * &#xD;
	 * @param cmd&#xD;
	 * @param player object&#xD;
	 * @param dealer object</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKWmFBnTEeaqg9F32W2naQ" name="cmd">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKXNIBnTEeaqg9F32W2naQ" name="payOut" method="_iQrQhxnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ89URnTEeaqg9F32W2naQ">
            <body>checks win/lose conditions and pays the player if applicable&#xD;
	 * @param player object&#xD;
	 * @param dealer object</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iKXNIRnTEeaqg9F32W2naQ" name="dealerTurn" method="_iQr3kBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ89UhnTEeaqg9F32W2naQ">
            <body>plays the dealer's turn. The dealer stands on all 17s and hits otherwise&#xD;
	 * @param dealer</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iKX0MBnTEeaqg9F32W2naQ" name="prepareNextRound" method="_iQr3kRnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ89UxnTEeaqg9F32W2naQ">
            <body>Prepares for next round, by putting the hands in the shoe&#xD;
	 * &#xD;
	 * @param player&#xD;
	 * @param dealer</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iKX0MRnTEeaqg9F32W2naQ" name="getCommand" isAbstract="true" raisedException="_iJ7vURnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ89VBnTEeaqg9F32W2naQ">
            <body>Gets the next command to be played&#xD;
	 * @return next command to be played</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKX0MhnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKYbQBnTEeaqg9F32W2naQ" name="hasNextCommand" method="_iQr3khnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ89VRnTEeaqg9F32W2naQ">
            <body>Detects if there is another command waiting to be played&#xD;
	 * @return true if there is another command, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKYbQRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKYbQhnTEeaqg9F32W2naQ" name="quit" isAbstract="true">
          <ownedComment xmi:id="_iQ9kYBnTEeaqg9F32W2naQ">
            <body>quits the game</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iKZCUBnTEeaqg9F32W2naQ" name="printMessage" method="_iQr3lBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ9kYRnTEeaqg9F32W2naQ">
            <body>Prints a message</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKZCURnTEeaqg9F32W2naQ" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKZpYBnTEeaqg9F32W2naQ" name="handleMoneyException" method="_iQseohnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ9kYxnTEeaqg9F32W2naQ">
            <body>Handle the exception - useful for the different modes in subclasses</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKZpYRnTEeaqg9F32W2naQ" name="e">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iPQUMBnTEeaqg9F32W2naQ" name="printMessage" method="_iQseoBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ9kYhnTEeaqg9F32W2naQ">
            <body>Prints an object's textual description</body>
          </ownedComment>
          <ownedParameter xmi:id="_iPQUMRnTEeaqg9F32W2naQ" name="o" type="_iPFVERnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iKd60BnTEeaqg9F32W2naQ" name="PlayingAreaDebug">
        <ownedComment xmi:id="_iQ9kZBnTEeaqg9F32W2naQ">
          <body>@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_iOxMABnTEeaqg9F32W2naQ" general="_iKTiwBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQH24BnTEeaqg9F32W2naQ" name="cmdFile" visibility="package" type="_iOv94BnTEeaqg9F32W2naQ" association="_iRVX0BnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQId8RnTEeaqg9F32W2naQ" name="cmds" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQJFABnTEeaqg9F32W2naQ" name="handIndex" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQJFAhnTEeaqg9F32W2naQ" name="previousBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQJsERnTEeaqg9F32W2naQ" name="minimumBet" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQtFsBnTEeaqg9F32W2naQ" name="PlayingAreaDebug" specification="_iKfI8BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQtFsRnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtFshnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtFsxnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtFtBnTEeaqg9F32W2naQ" name="shoeFile">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtFtRnTEeaqg9F32W2naQ" name="inCmdFile">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtFthnTEeaqg9F32W2naQ" type="_iKd60BnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(minBet, maxBet, initialMoney);&#xD;
		&#xD;
		try{&#xD;
			this.shoe = new Shoe(shoeFile);  //create shoe from shoe file&#xD;
		}catch(FileNotFoundException e){&#xD;
			System.out.println(&quot;Shoe file not found: &quot; + e.getMessage());&#xD;
			System.exit(1);&#xD;
		}catch(NotParseableException e){&#xD;
			System.out.println(&quot;Shoe file badly formatted: &quot; + e.getMessage());&#xD;
			System.exit(1);&#xD;
		}&#xD;
		&#xD;
		//this.shoeFile = args[4];&#xD;
		try {&#xD;
			cmdFile = new Scanner(new File(inCmdFile)); //import cmd file	&#xD;
		}catch(FileNotFoundException e){&#xD;
			System.out.println(&quot;Command file not found: &quot; + e.getMessage());&#xD;
			System.exit(1);&#xD;
		}&#xD;
		&#xD;
		previousBet = minBet;&#xD;
		&#xD;
		ad = new Advisor(minBet,maxBet,shoe.getNbDecks());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQtFtxnTEeaqg9F32W2naQ" name="getCommand" specification="_iKfwBRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQtFuBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if(cmdFile.hasNext()) {&#xD;
			String cmd = cmdFile.next();&#xD;
			if(cmd.equals(&quot;b&quot;) &amp;&amp; cmdFile.hasNextInt()){ //if is a bet and next input is a number, command is everything&#xD;
				cmd += &quot; &quot; + cmdFile.next();&#xD;
			}&#xD;
			System.out.println(&quot;-cmd &quot; + cmd);&#xD;
			return cmd;&#xD;
		} else throw new NoMoreCmdsException();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQtFuRnTEeaqg9F32W2naQ" name="quit" specification="_iKgXERnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>cmdFile.close();&#xD;
		System.exit(0);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iKfI8BnTEeaqg9F32W2naQ" name="PlayingAreaDebug" method="_iQtFsBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iKfwAhnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iKfwAxnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iKfI8RnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKfI8hnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKfI8xnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKfwABnTEeaqg9F32W2naQ" name="shoeFile">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKfwARnTEeaqg9F32W2naQ" name="inCmdFile">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKfwBBnTEeaqg9F32W2naQ" type="_iKd60BnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKfwBRnTEeaqg9F32W2naQ" name="getCommand" method="_iQtFtxnTEeaqg9F32W2naQ" raisedException="_iJ7vURnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKgXEBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKgXERnTEeaqg9F32W2naQ" name="quit" method="_iQtFuRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iKizUBnTEeaqg9F32W2naQ" name="PlayingAreaInteractive">
        <ownedComment xmi:id="_iQ9kZRnTEeaqg9F32W2naQ">
          <body>This class controls all game logic.&#xD;
&#xD;
@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_iOzoQBnTEeaqg9F32W2naQ" general="_iKTiwBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQKTIBnTEeaqg9F32W2naQ" name="nbDecksInShoe" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQK6MBnTEeaqg9F32W2naQ" name="shufflePercentage" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQK6MhnTEeaqg9F32W2naQ" name="handIndex" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQLhQBnTEeaqg9F32W2naQ" name="previousBet">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQLhQhnTEeaqg9F32W2naQ" name="reader" visibility="private" type="_iOv94BnTEeaqg9F32W2naQ" association="_iRVX0xnTEeaqg9F32W2naQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQtswBnTEeaqg9F32W2naQ" name="PlayingAreaInteractive" specification="_iKkBcBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQtswRnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtswhnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtswxnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtsxBnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtsxRnTEeaqg9F32W2naQ" name="shufflePercent">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQtsxhnTEeaqg9F32W2naQ" type="_iKizUBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>super(minBet, maxBet, initialMoney);&#xD;
		&#xD;
		handIndex = 0;//initial hand number to be used in hand array index&#xD;
		&#xD;
		try{&#xD;
			this.shoe = new Shoe(nbDecks);&#xD;
		}catch(IllegalDeckNumberException e){&#xD;
			printMessage(e.getMessage());&#xD;
			System.exit(1);&#xD;
		}&#xD;
		&#xD;
		this.shufflePercentage = shufflePercent;	&#xD;
		&#xD;
		//Used to get input from player&#xD;
		reader = new Scanner(System.in);&#xD;
		reader.useDelimiter(&quot;[\r\n/]&quot;);&#xD;
		&#xD;
		ad = new Advisor(this.minBet,this.maxBet,nbDecks);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQtsxxnTEeaqg9F32W2naQ" name="getCommand" specification="_iKlPkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQtsyBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return reader.next();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQtsyRnTEeaqg9F32W2naQ" name="quit" specification="_iKl2oBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>reader.close();&#xD;
		System.out.println(&quot;GAME OVER&quot;);&#xD;
		System.exit(0);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQtsyhnTEeaqg9F32W2naQ" name="prepareNextRound" specification="_iKl2oRnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>super.prepareNextRound();&#xD;
		//Shuffle checking is needed in this mode&#xD;
		if(shoe.shuffle(shufflePercentage)){&#xD;
			//reset strategies&#xD;
			ad.resetStrats();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iKkBcBnTEeaqg9F32W2naQ" name="PlayingAreaInteractive" method="_iQtswBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iKkogxnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iKkohBnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iQ9kZhnTEeaqg9F32W2naQ">
            <body>Constructor for an interactive-mode Playing Area&#xD;
	 * &#xD;
	 * @param minBet is the minimum bet accepted for the game&#xD;
	 * @param maxBet is the maximum bet accepted for the game&#xD;
	 * @param initialMoney is the initial balance of the player&#xD;
	 * @param nbDecks is the number of decks in the shoe&#xD;
	 * @param shufflePercent is the percentage of the shoe that must have been played so the shoe is shuffled</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKkBcRnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKkBchnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKkogBnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKkogRnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKkoghnTEeaqg9F32W2naQ" name="shufflePercent">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKkohRnTEeaqg9F32W2naQ" type="_iKizUBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKlPkBnTEeaqg9F32W2naQ" name="getCommand" method="_iQtsxxnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ-LcBnTEeaqg9F32W2naQ">
            <body>Reads the command from input line</body>
          </ownedComment>
          <ownedParameter xmi:id="_iKlPkRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKl2oBnTEeaqg9F32W2naQ" name="quit" method="_iQtsyRnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ-LcRnTEeaqg9F32W2naQ">
            <body>Closes input reader and exits the game</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iKl2oRnTEeaqg9F32W2naQ" name="prepareNextRound" method="_iQtsyhnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ-LchnTEeaqg9F32W2naQ">
            <body>Prepares for next round of blackjack, according to the mode's needs&lt;br>&#xD;
	 * It resets both player's and dealer's hands, returning the cards to the shoe.&lt;br>&#xD;
	 * In interactive mode, it checks the shoe (if it needs shuffling, it shuffles) and resets the strategies.</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iKnr0BnTEeaqg9F32W2naQ" name="PlayingAreaSimulation">
        <ownedComment xmi:id="_iQ-LcxnTEeaqg9F32W2naQ">
          <body>@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_iO2rkBnTEeaqg9F32W2naQ" general="_iKTiwBnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQMIUBnTEeaqg9F32W2naQ" name="nbDecksInShoe" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQMIUhnTEeaqg9F32W2naQ" name="shufflePercentage" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQMvYRnTEeaqg9F32W2naQ" name="nbShuffles" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQNWcBnTEeaqg9F32W2naQ" name="strategy" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQNWchnTEeaqg9F32W2naQ" name="handIndex" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQN9gRnTEeaqg9F32W2naQ" name="previousBet" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQN9gxnTEeaqg9F32W2naQ" name="minimumBet" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQ-LdBnTEeaqg9F32W2naQ" name="shufflesPlayed" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQuT0BnTEeaqg9F32W2naQ" name="PlayingAreaSimulation" specification="_iKqIEBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQuT0RnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQuT0hnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQuT0xnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQuT1BnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQuT1RnTEeaqg9F32W2naQ" name="shufflePercent">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQuT1hnTEeaqg9F32W2naQ" name="nbShuffles">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQuT1xnTEeaqg9F32W2naQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQuT2BnTEeaqg9F32W2naQ" type="_iKnr0BnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>//TODO:faltam restriÃ§oes na passagem dos comandos - ver enunciado. &#xD;
		//Muito provavelmente falta tb nos outros modos de jogo&#xD;
		super(minBet, maxBet, initialMoney);&#xD;
&#xD;
		this.nbDecksInShoe = nbDecks;&#xD;
		this.shufflePercentage = shufflePercent;&#xD;
		this.nbShuffles = nbShuffles;&#xD;
		this.shufflesPlayed = 0;&#xD;
		this.strategy = strat;&#xD;
		previousBet = minBet;&#xD;
		&#xD;
		//Creating advisor&#xD;
		this.ad = new Advisor(minBet, maxBet, nbDecks, strat);&#xD;
		&#xD;
		try{&#xD;
			this.shoe = new Shoe(nbDecks);&#xD;
		}catch(IllegalDeckNumberException e){&#xD;
			System.out.println(e.getMessage());&#xD;
			System.exit(1);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQuT2RnTEeaqg9F32W2naQ" name="getCommand" specification="_iKrWMBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQuT2hnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if(!dealDone &amp;&amp; !betDone) return ad.betInterpret(ad.advise(previousBet));&#xD;
		if(betDone &amp;&amp; !dealDone)   return &quot;d&quot;;&#xD;
		else return ad.cmdInterpret(dealDone,player, ad.advise(dealDone, player,  dealer.hand.cards.iterator().next()));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQu64BnTEeaqg9F32W2naQ" name="hasNextCommand" specification="_iKrWMhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQu64RnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(shufflesPlayed > nbShuffles) quit();&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQu64hnTEeaqg9F32W2naQ" name="quit" specification="_iKr9QRnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>try{&#xD;
			stat.presentStatistics();&#xD;
		} catch(NoPlayedRoundsException e){&#xD;
			System.out.println(&quot;no rounds were played&quot;);&#xD;
		}&#xD;
		System.out.println(&quot;GAME OVER&quot;);&#xD;
		System.out.println(&quot;number of rounds played: &quot; + nbShuffles);&#xD;
		System.exit(0);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQu64xnTEeaqg9F32W2naQ" name="prepareNextRound" specification="_iKr9QhnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>super.prepareNextRound();&#xD;
		//Shuffle checking is needed in this mode&#xD;
		if(shoe.shuffle(shufflePercentage)) {&#xD;
			shufflesPlayed++;&#xD;
			//reset strategies&#xD;
			ad.resetStrats();&#xD;
		}&#xD;
		betDone = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQu65BnTEeaqg9F32W2naQ" name="handleMoneyException" specification="_iKskUBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQu65RnTEeaqg9F32W2naQ" name="e">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>super.handleMoneyException(e);&#xD;
		quit();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iKqIEBnTEeaqg9F32W2naQ" name="PlayingAreaSimulation" method="_iQuT0BnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iKqvJRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iKqvJhnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iKqIERnTEeaqg9F32W2naQ" name="minBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKqIEhnTEeaqg9F32W2naQ" name="maxBet">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKqvIBnTEeaqg9F32W2naQ" name="initialMoney">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKqvIRnTEeaqg9F32W2naQ" name="nbDecks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKqvIhnTEeaqg9F32W2naQ" name="shufflePercent">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKqvIxnTEeaqg9F32W2naQ" name="nbShuffles">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKqvJBnTEeaqg9F32W2naQ" name="strat">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKqvJxnTEeaqg9F32W2naQ" type="_iKnr0BnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKrWMBnTEeaqg9F32W2naQ" name="getCommand" method="_iQuT2RnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKrWMRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKrWMhnTEeaqg9F32W2naQ" name="hasNextCommand" method="_iQu64BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKr9QBnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iKr9QRnTEeaqg9F32W2naQ" name="quit" method="_iQu64hnTEeaqg9F32W2naQ"/>
        <ownedOperation xmi:id="_iKr9QhnTEeaqg9F32W2naQ" name="prepareNextRound" method="_iQu64xnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iQ-ygRnTEeaqg9F32W2naQ">
            <body>Prepares for next round of blackjack, according to the mode's needs&lt;br>&#xD;
	 * It resets both player's and dealer's hands, returning the cards to the shoe.&lt;br>&#xD;
	 * In simulation mode, it also checks if the shuffling percentage was reached,&lt;br></body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iKskUBnTEeaqg9F32W2naQ" name="handleMoneyException" method="_iQu65BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKskURnTEeaqg9F32W2naQ" name="e">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iKvnoBnTEeaqg9F32W2naQ" name="Pot">
        <ownedComment xmi:id="_iQ_ZkBnTEeaqg9F32W2naQ">
          <body>Pot Class&#xD;
A pot has a total value and a number of chips.&#xD;
&#xD;
@author Filipe Correia&#xD;
@author Helder Duarte&#xD;
@author Joao Vieira&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iQOkkBnTEeaqg9F32W2naQ" name="chips" visibility="package" type="_iONyYBnTEeaqg9F32W2naQ" association="_iRV-4RnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQPLohnTEeaqg9F32W2naQ" name="totalValue" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQvh8BnTEeaqg9F32W2naQ" name="Pot" specification="_iKwOsBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQvh8RnTEeaqg9F32W2naQ" name="totalValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQvh8hnTEeaqg9F32W2naQ" type="_iKvnoBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>chips = new ArrayList&lt;Chip>();&#xD;
		this.totalValue = totalValue;&#xD;
		int i;&#xD;
		&#xD;
		for(i=0; i&lt;totalValue/100; i++) {&#xD;
			chips.add(new Chip(100));&#xD;
		}&#xD;
		totalValue = totalValue - totalValue/100*100;&#xD;
		for(i=0; i&lt;totalValue/25; i++) {&#xD;
			chips.add(new Chip(25));&#xD;
		}&#xD;
		totalValue = totalValue - totalValue/25*25;&#xD;
		for(i=0; i&lt;totalValue/5; i++) {&#xD;
			chips.add(new Chip(5));&#xD;
		}&#xD;
		totalValue = totalValue - totalValue/5*5;&#xD;
		for(i=0; i&lt;totalValue; i++) {&#xD;
			chips.add(new Chip(1));&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQvh8xnTEeaqg9F32W2naQ" name="toString" specification="_iKw1xBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQvh9BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>ListIterator&lt;Chip> it = this.chips.listIterator();&#xD;
		StringBuilder sb = new StringBuilder();&#xD;
		&#xD;
		while(it.hasNext()){&#xD;
			sb.append(it.next().toString());&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iKwOsBnTEeaqg9F32W2naQ" name="Pot" method="_iQvh8BnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iKw1wRnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iKw1whnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iKw1wBnTEeaqg9F32W2naQ" name="totalValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iKw1wxnTEeaqg9F32W2naQ" type="_iKvnoBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iKw1xBnTEeaqg9F32W2naQ" name="toString" method="_iQvh8xnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iKw1xRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iKyq8BnTEeaqg9F32W2naQ" name="Statistics">
        <ownedAttribute xmi:id="_iQPysRnTEeaqg9F32W2naQ" name="playerBJ" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQQZwRnTEeaqg9F32W2naQ" name="wins" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQRA0BnTEeaqg9F32W2naQ" name="plays" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQRA0hnTEeaqg9F32W2naQ" name="balance" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQRn4BnTEeaqg9F32W2naQ" name="initBalance" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQ_ZkRnTEeaqg9F32W2naQ" name="dealerBJ" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iRAAoRnTEeaqg9F32W2naQ" name="losses" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iRAnsRnTEeaqg9F32W2naQ" name="pushes" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQvh9RnTEeaqg9F32W2naQ" name="Statistics" specification="_iK0gIBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQvh9hnTEeaqg9F32W2naQ" name="initBalance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQvh9xnTEeaqg9F32W2naQ" type="_iKyq8BnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>this.initBalance = initBalance;
		this.balance = initBalance;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQvh-BnTEeaqg9F32W2naQ" name="setBalance" specification="_iK1HMBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQvh-RnTEeaqg9F32W2naQ" name="balance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>this.balance = balance;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQvh-hnTEeaqg9F32W2naQ" name="addWin" specification="_iK1uQBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>this.wins++;
		this.plays++;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwJABnTEeaqg9F32W2naQ" name="addLoss" specification="_iK1uQRnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>this.losses++;
		this.plays++;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwJARnTEeaqg9F32W2naQ" name="addPush" specification="_iK1uQhnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>this.pushes++;
		this.plays++;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwJAhnTEeaqg9F32W2naQ" name="addPlayerBJ" specification="_iK2VUBnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>this.playerBJ++;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwJAxnTEeaqg9F32W2naQ" name="addDealerBJ" specification="_iK2VURnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>this.dealerBJ++;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwJBBnTEeaqg9F32W2naQ" name="presentStatistics" specification="_iK2VUhnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>if(plays == 0) throw new NoPlayedRoundsException();
		System.out.printf(&quot;PLAYS %d\n&quot;, plays);
		System.out.printf(&quot;BJ P/D %6.2f/%.2f\n&quot;,(float)playerBJ/plays,(float)dealerBJ/plays);
		System.out.printf(&quot;BJ P/D %6.2f/%.2f\n&quot;,(float)playerBJ,(float)dealerBJ);
		System.out.printf(&quot;Win %11.2f\n&quot;,(float)wins/plays);
		System.out.printf(&quot;Lose %10.2f\n&quot;,(float)losses/plays);
		System.out.printf(&quot;Push %10.2f\n&quot;,(float)pushes/plays);
		System.out.printf(&quot;Balance %5.2f(%.0f%%)\n&quot;,balance,balance/initBalance*100);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iK0gIBnTEeaqg9F32W2naQ" name="Statistics" method="_iQvh9RnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iK0gIhnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iK0gIxnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_iK0gIRnTEeaqg9F32W2naQ" name="initBalance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iK0gJBnTEeaqg9F32W2naQ" type="_iKyq8BnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iK1HMBnTEeaqg9F32W2naQ" name="setBalance" method="_iQvh-BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iK1HMRnTEeaqg9F32W2naQ" name="balance">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iK1uQBnTEeaqg9F32W2naQ" name="addWin" method="_iQvh-hnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRAntBnTEeaqg9F32W2naQ">
            <body>Adds a win to the statistics</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iK1uQRnTEeaqg9F32W2naQ" name="addLoss" method="_iQwJABnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRAntRnTEeaqg9F32W2naQ">
            <body>Adds a loss to the statistics</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iK1uQhnTEeaqg9F32W2naQ" name="addPush" method="_iQwJARnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRBOwBnTEeaqg9F32W2naQ">
            <body>Adds a push to the statistics</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iK2VUBnTEeaqg9F32W2naQ" name="addPlayerBJ" method="_iQwJAhnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRBOwRnTEeaqg9F32W2naQ">
            <body>Adds a blackjack from the player to the statistics</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iK2VURnTEeaqg9F32W2naQ" name="addDealerBJ" method="_iQwJAxnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRBOwhnTEeaqg9F32W2naQ">
            <body>Adds a blackjack from the dealer to the statistics</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iK2VUhnTEeaqg9F32W2naQ" name="presentStatistics" method="_iQwJBBnTEeaqg9F32W2naQ" raisedException="_iJ89cBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRBOwxnTEeaqg9F32W2naQ">
            <body>Prints the statistics, with the following statistics: &lt;br>
	 * &lt;p>BJ P/D  -> playerBlackJacks/dealerBlackJacks&lt;br>
	 *    Win -> playerWins &lt;br>
	 *    Lose -> playerLosses &lt;br>
	 *    Push -> playerPushes &lt;br>
	 *    Balance -> absoluteBalance(relativeBalance%)&lt;/p>
	 * Relative balance is relative to the initial balance
	 * 
	 * @throws NoPlayedRoundsException</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_iK4KgBnTEeaqg9F32W2naQ" name="Shoe">
        <ownedComment xmi:id="_iRBOxBnTEeaqg9F32W2naQ">
          <body>Shoe class
Contains all the decks used during a blackjack game

@author Filipe Correia
@author Helder Duarte
@author Joao Vieira
 *
@see Deck
@see Card</body>
        </ownedComment>
        <ownedAttribute xmi:id="_iQS2ABnTEeaqg9F32W2naQ" name="cards" visibility="private" type="_iONyYBnTEeaqg9F32W2naQ" association="_iRWl8BnTEeaqg9F32W2naQ"/>
        <ownedAttribute xmi:id="_iQUEIBnTEeaqg9F32W2naQ" name="totalDecks" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iQUEIhnTEeaqg9F32W2naQ" name="playedCards" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwwEBnTEeaqg9F32W2naQ" name="Shoe" specification="_iK4xkBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQwwERnTEeaqg9F32W2naQ" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQwwEhnTEeaqg9F32W2naQ" type="_iK4KgBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>cards = new ArrayList&lt;Card>();
		if(n &lt; 2 || n > 8) throw new IllegalDeckNumberException();
		this.totalDecks = n;
		//this.decks = new Deck[totalDecks];
		cards.addAll((new Deck()).cards);
		shuffle();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwwExnTEeaqg9F32W2naQ" name="Shoe" specification="_iK5YohnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQwwFBnTEeaqg9F32W2naQ" type="_iK4KgBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>this(4);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQwwFRnTEeaqg9F32W2naQ" name="Shoe" specification="_iK5_shnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQwwFhnTEeaqg9F32W2naQ" name="shoefile">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQwwFxnTEeaqg9F32W2naQ" type="_iK4KgBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>int nbCards = 0;
		Scanner s = new Scanner(new File(shoefile));
		cards = new ArrayList&lt;Card>();
		while(s.hasNext()){
			this.cards.add(new Card(s.next()));
			nbCards++;
		}
		this.totalDecks = nbCards/52; //52 is the number of cards in a complete deck
		s.close();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQxXIBnTEeaqg9F32W2naQ" name="getNext" specification="_iK6mwxnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQxXIRnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
          <language>java</language>
          <body>//ensure Ace has score of 11
		Card c = cards.remove(0);
		if(c.getSymbol() == 'A') c.setScore(11);
		return c;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQxXIhnTEeaqg9F32W2naQ" name="addLast" specification="_iO7kERnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQxXIxnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>playedCards++;
		cards.add(c);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQxXJBnTEeaqg9F32W2naQ" name="addLast" specification="_iPVMsRnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQxXJRnTEeaqg9F32W2naQ" name="ca" type="_iONyYBnTEeaqg9F32W2naQ"/>
          <language>java</language>
          <body>playedCards += ca.size();
		cards.addAll(ca);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQxXJhnTEeaqg9F32W2naQ" name="toString" specification="_iK7N0BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQxXJxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>StringBuilder sb = new StringBuilder();
		for(Card c : cards) sb.append(c);
		return sb.toString();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQx-MBnTEeaqg9F32W2naQ" name="isFull" specification="_iK704hnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQx-MRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return (cards.size() == 52*totalDecks);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQx-MhnTEeaqg9F32W2naQ" name="shuffle" specification="_iK705BnTEeaqg9F32W2naQ">
          <language>java</language>
          <body>System.out.println(&quot;Shuffling the shoe...&quot;);
		Collections.shuffle(cards);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQx-MxnTEeaqg9F32W2naQ" name="shuffle" specification="_iK8b8BnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQx-NBnTEeaqg9F32W2naQ" name="shufflePercentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iQx-NRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(100.0*playedCards/(totalDecks*52) > shufflePercentage || 100.0*playedCards/(totalDecks*52) == 100) {
			shuffle();
			playedCards = 0;
			return true;
		}
		return false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQx-NhnTEeaqg9F32W2naQ" name="getNbDecks" specification="_iK8b8xnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQx-NxnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.totalDecks;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iQylQBnTEeaqg9F32W2naQ" name="getDecksLeft" specification="_iK8b9RnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iQylQRnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
          <language>java</language>
          <body>return ((totalDecks*52)-playedCards)/52;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_iK4xkBnTEeaqg9F32W2naQ" name="Shoe" method="_iQwwEBnTEeaqg9F32W2naQ" raisedException="_iJ3d4BnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iK4xkhnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iK5YoBnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iRBOxRnTEeaqg9F32W2naQ">
            <body>Constructor for a Shoe of n decks
	 * @param n is the number of decks in the deck array. Must be between 2 and 8</body>
          </ownedComment>
          <ownedParameter xmi:id="_iK4xkRnTEeaqg9F32W2naQ" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iK5YoRnTEeaqg9F32W2naQ" type="_iK4KgBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iK5YohnTEeaqg9F32W2naQ" name="Shoe" method="_iQwwExnTEeaqg9F32W2naQ" raisedException="_iJ3d4BnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iK5YoxnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iK5_sBnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iRBOxhnTEeaqg9F32W2naQ">
            <body>Default no-arg constructor - defaults to 4 decks</body>
          </ownedComment>
          <ownedParameter xmi:id="_iK5_sRnTEeaqg9F32W2naQ" type="_iK4KgBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iK5_shnTEeaqg9F32W2naQ" name="Shoe" method="_iQwwFRnTEeaqg9F32W2naQ" raisedException="_iPUloBnTEeaqg9F32W2naQ _iJ_ZsBnTEeaqg9F32W2naQ">
          <eAnnotations xmi:id="_iK6mwBnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_iK6mwRnTEeaqg9F32W2naQ" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iRBOxxnTEeaqg9F32W2naQ">
            <body>Constructor for a shoe taken from a shoe file
	 * 
	 * @params shoeFile String of path of shoefile</body>
          </ownedComment>
          <ownedParameter xmi:id="_iK5_sxnTEeaqg9F32W2naQ" name="shoefile">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iK6mwhnTEeaqg9F32W2naQ" type="_iK4KgBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iK6mwxnTEeaqg9F32W2naQ" name="getNext" method="_iQxXIBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRBOyBnTEeaqg9F32W2naQ">
            <body>Gets the next available card from the shoe
	 * @return next available card from the shoe</body>
          </ownedComment>
          <ownedParameter xmi:id="_iO7kEBnTEeaqg9F32W2naQ" type="_iJMIcBnTEeaqg9F32W2naQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iK7N0BnTEeaqg9F32W2naQ" name="toString" method="_iQxXJhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iK7N0RnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iK704hnTEeaqg9F32W2naQ" name="isFull" method="_iQx-MBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRB10BnTEeaqg9F32W2naQ">
            <body>Returns whether the shoe is full (all the decks are full)
	 * @return isFull</body>
          </ownedComment>
          <ownedParameter xmi:id="_iK704xnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iK705BnTEeaqg9F32W2naQ" name="shuffle" method="_iQx-MhnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRB10RnTEeaqg9F32W2naQ">
            <body>Shuffles the shoe</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_iK8b8BnTEeaqg9F32W2naQ" name="shuffle" method="_iQx-MxnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRB10hnTEeaqg9F32W2naQ">
            <body>Shuffles the decks in the shoe if the percentage of cards played is higher than the percentage given as a parameter
	 * @param shufflePercentage percentage of played shoe required to shuffle the deck</body>
          </ownedComment>
          <ownedParameter xmi:id="_iK8b8RnTEeaqg9F32W2naQ" name="shufflePercentage">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iK8b8hnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iK8b8xnTEeaqg9F32W2naQ" name="getNbDecks" method="_iQx-NhnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iK8b9BnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iK8b9RnTEeaqg9F32W2naQ" name="getDecksLeft" method="_iQylQBnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRB10xnTEeaqg9F32W2naQ">
            <body>Returns the number of decks remaining. This value is a 
	 * float in the range [0 totalDecks].
	 * @return decks remaining</body>
          </ownedComment>
          <ownedParameter xmi:id="_iK9DABnTEeaqg9F32W2naQ" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iO7kERnTEeaqg9F32W2naQ" name="addLast" method="_iQxXIhnTEeaqg9F32W2naQ">
          <ownedComment xmi:id="_iRBOyRnTEeaqg9F32W2naQ">
            <body>Adds a card to the bottom of the shoe
	 * @param c card to add to the bottom of the shoe</body>
          </ownedComment>
          <ownedParameter xmi:id="_iO7kEhnTEeaqg9F32W2naQ" name="c" type="_iJMIcBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iPVMsRnTEeaqg9F32W2naQ" name="addLast" method="_iQxXJBnTEeaqg9F32W2naQ">
          <ownedParameter xmi:id="_iPVMshnTEeaqg9F32W2naQ" name="ca" type="_iONyYBnTEeaqg9F32W2naQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRMN4BnTEeaqg9F32W2naQ" name="" memberEnd="_iRMN4RnTEeaqg9F32W2naQ _iKP4YBnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRMN4RnTEeaqg9F32W2naQ" name="" type="_iKNcIBnTEeaqg9F32W2naQ" association="_iRMN4BnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRM08RnTEeaqg9F32W2naQ" name="" memberEnd="_iRM08hnTEeaqg9F32W2naQ _iKQfcBnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRM08hnTEeaqg9F32W2naQ" name="" type="_iKNcIBnTEeaqg9F32W2naQ" association="_iRM08RnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRNcARnTEeaqg9F32W2naQ" name="" memberEnd="_iRNcAhnTEeaqg9F32W2naQ _iPiBAhnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRNcAhnTEeaqg9F32W2naQ" name="" type="_iI7CsBnTEeaqg9F32W2naQ" association="_iRNcARnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRODERnTEeaqg9F32W2naQ" name="" memberEnd="_iRODEhnTEeaqg9F32W2naQ _iPioERnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRODEhnTEeaqg9F32W2naQ" name="" type="_iI7CsBnTEeaqg9F32W2naQ" association="_iRODERnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iROqIRnTEeaqg9F32W2naQ" name="" memberEnd="_iROqIhnTEeaqg9F32W2naQ _iPu1URnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iROqIhnTEeaqg9F32W2naQ" name="" type="_iJXuoBnTEeaqg9F32W2naQ" association="_iROqIRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRPRMRnTEeaqg9F32W2naQ" name="" memberEnd="_iRPRMhnTEeaqg9F32W2naQ _iPwqgBnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRPRMhnTEeaqg9F32W2naQ" name="" type="_iJfDYBnTEeaqg9F32W2naQ" association="_iRPRMRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRP4QRnTEeaqg9F32W2naQ" name="" memberEnd="_iRP4QhnTEeaqg9F32W2naQ _iPzt0BnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRP4QhnTEeaqg9F32W2naQ" name="" type="_iJjU0BnTEeaqg9F32W2naQ" association="_iRP4QRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRQfURnTEeaqg9F32W2naQ" name="" memberEnd="_iRQfUhnTEeaqg9F32W2naQ _iP0U4RnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRQfUhnTEeaqg9F32W2naQ" name="" type="_iJjU0BnTEeaqg9F32W2naQ" association="_iRQfURnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRRGYRnTEeaqg9F32W2naQ" name="" memberEnd="_iRRGYhnTEeaqg9F32W2naQ _iP2KERnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRRGYhnTEeaqg9F32W2naQ" name="" type="_iJm_MBnTEeaqg9F32W2naQ" association="_iRRGYRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRRtcRnTEeaqg9F32W2naQ" name="" memberEnd="_iRRtchnTEeaqg9F32W2naQ _iP_7ERnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRRtchnTEeaqg9F32W2naQ" name="" type="_iKAAwxnTEeaqg9F32W2naQ" association="_iRRtcRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRSUgRnTEeaqg9F32W2naQ" name="" memberEnd="_iRSUghnTEeaqg9F32W2naQ _iQEzkRnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRSUghnTEeaqg9F32W2naQ" name="" type="_iKTiwBnTEeaqg9F32W2naQ" association="_iRSUgRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRS7kRnTEeaqg9F32W2naQ" name="" memberEnd="_iRS7khnTEeaqg9F32W2naQ _iQEzkxnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRS7khnTEeaqg9F32W2naQ" name="" type="_iKTiwBnTEeaqg9F32W2naQ" association="_iRS7kRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRTioRnTEeaqg9F32W2naQ" name="" memberEnd="_iRTiohnTEeaqg9F32W2naQ _iQGBsxnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRTiohnTEeaqg9F32W2naQ" name="" type="_iKTiwBnTEeaqg9F32W2naQ" association="_iRTioRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRUJsRnTEeaqg9F32W2naQ" name="" memberEnd="_iRUJshnTEeaqg9F32W2naQ _iQGowRnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRUJshnTEeaqg9F32W2naQ" name="" type="_iKTiwBnTEeaqg9F32W2naQ" association="_iRUJsRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRUwwRnTEeaqg9F32W2naQ" name="" memberEnd="_iRUwwhnTEeaqg9F32W2naQ _iQHP0BnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRUwwhnTEeaqg9F32W2naQ" name="" type="_iKTiwBnTEeaqg9F32W2naQ" association="_iRUwwRnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRVX0BnTEeaqg9F32W2naQ" name="" memberEnd="_iRVX0RnTEeaqg9F32W2naQ _iQH24BnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRVX0RnTEeaqg9F32W2naQ" name="" type="_iKd60BnTEeaqg9F32W2naQ" association="_iRVX0BnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRVX0xnTEeaqg9F32W2naQ" name="" memberEnd="_iRVX1BnTEeaqg9F32W2naQ _iQLhQhnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRVX1BnTEeaqg9F32W2naQ" name="" type="_iKizUBnTEeaqg9F32W2naQ" association="_iRVX0xnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRV-4RnTEeaqg9F32W2naQ" name="" memberEnd="_iRV-4hnTEeaqg9F32W2naQ _iQOkkBnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRV-4hnTEeaqg9F32W2naQ" name="" type="_iKvnoBnTEeaqg9F32W2naQ" association="_iRV-4RnTEeaqg9F32W2naQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iRWl8BnTEeaqg9F32W2naQ" name="" memberEnd="_iRWl8RnTEeaqg9F32W2naQ _iQS2ABnTEeaqg9F32W2naQ">
        <ownedEnd xmi:id="_iRWl8RnTEeaqg9F32W2naQ" name="" type="_iK4KgBnTEeaqg9F32W2naQ" association="_iRWl8BnTEeaqg9F32W2naQ"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_iGTMgBnTEeaqg9F32W2naQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_iGTMgRnTEeaqg9F32W2naQ" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_iOA-EBnTEeaqg9F32W2naQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iONyYBnTEeaqg9F32W2naQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_iOOZcRnTEeaqg9F32W2naQ" name="ListIterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOrFYRnTEeaqg9F32W2naQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOv94BnTEeaqg9F32W2naQ" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_iGtcMBnTEeaqg9F32W2naQ" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_iORcwBnTEeaqg9F32W2naQ" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOUgERnTEeaqg9F32W2naQ" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOVHIRnTEeaqg9F32W2naQ" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOWVQRnTEeaqg9F32W2naQ" name="GridLayout"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_iHW8cBnTEeaqg9F32W2naQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_iPUloBnTEeaqg9F32W2naQ" name="FileNotFoundException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_iPFVEBnTEeaqg9F32W2naQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_iPFVERnTEeaqg9F32W2naQ" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iPK0oBnTEeaqg9F32W2naQ" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_iGtcMRnTEeaqg9F32W2naQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_iGtcMhnTEeaqg9F32W2naQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_iOSD0RnTEeaqg9F32W2naQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOSq4RnTEeaqg9F32W2naQ" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOTR8RnTEeaqg9F32W2naQ" name="UIManager"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOT5ARnTEeaqg9F32W2naQ" name="UnsupportedLookAndFeelException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOVuMBnTEeaqg9F32W2naQ" name="BoxLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOVuMhnTEeaqg9F32W2naQ" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOW8URnTEeaqg9F32W2naQ" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOXjYRnTEeaqg9F32W2naQ" name="JMenuBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOYKcRnTEeaqg9F32W2naQ" name="JMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iOYxgRnTEeaqg9F32W2naQ" name="JTextField"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_hhTCABnTEeaqg9F32W2naQ">
      <eAnnotations xmi:id="_hhTCARnTEeaqg9F32W2naQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_hhTpEBnTEeaqg9F32W2naQ" base_Package="_hbriMBnTEeaqg9F32W2naQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iJQZ4hnTEeaqg9F32W2naQ" base_Element="_iJQZ4BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iJRA8BnTEeaqg9F32W2naQ" base_Element="_iJQZ4BnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iJRA8RnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iJRoABnTEeaqg9F32W2naQ" base_Element="_iJRA8hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iJRoARnTEeaqg9F32W2naQ" base_Element="_iJRA8hnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iJRoAhnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iJWggRnTEeaqg9F32W2naQ" base_Element="_iJV5dBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iJWgghnTEeaqg9F32W2naQ" base_Element="_iJV5dBnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iJWggxnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iJaK4BnTEeaqg9F32W2naQ" base_Element="_iJZj0RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iJaK4RnTEeaqg9F32W2naQ" base_Element="_iJZj0RnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iJaK4hnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iJax8BnTEeaqg9F32W2naQ" base_Element="_iJaK4xnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iJax8RnTEeaqg9F32W2naQ" base_Element="_iJaK4xnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iJax8hnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_iJlKABnTEeaqg9F32W2naQ" base_Element="_iJki8RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Generics xmi:id="_iJqCgBnTEeaqg9F32W2naQ" genericsValue="Card" base_Element="_iJpbcBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iJtF0hnTEeaqg9F32W2naQ" base_Element="_iJtF0BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iJts4BnTEeaqg9F32W2naQ" base_Element="_iJtF0BnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iJts4RnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKCdARnTEeaqg9F32W2naQ" base_Element="_iKB18BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKDEEBnTEeaqg9F32W2naQ" base_Element="_iKB18BnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKDEERnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKDEFBnTEeaqg9F32W2naQ" base_Element="_iKDEEhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKDrIBnTEeaqg9F32W2naQ" base_Element="_iKDEEhnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKDrIRnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKESMBnTEeaqg9F32W2naQ" base_Element="_iKDrIhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKESMRnTEeaqg9F32W2naQ" base_Element="_iKDrIhnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKESMhnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKE5QBnTEeaqg9F32W2naQ" base_Element="_iKESMxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKE5QRnTEeaqg9F32W2naQ" base_Element="_iKESMxnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKE5QhnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKFgUBnTEeaqg9F32W2naQ" base_Element="_iKE5QxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKFgURnTEeaqg9F32W2naQ" base_Element="_iKE5QxnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKFgUhnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKFgVBnTEeaqg9F32W2naQ" base_Element="_iKFgUxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKGHYBnTEeaqg9F32W2naQ" base_Element="_iKFgUxnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKGHYRnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKGucRnTEeaqg9F32W2naQ" base_Element="_iKGHYhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKGuchnTEeaqg9F32W2naQ" base_Element="_iKGHYhnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKHVgBnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKH8kRnTEeaqg9F32W2naQ" base_Element="_iKHVgxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKH8khnTEeaqg9F32W2naQ" base_Element="_iKHVgxnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKH8kxnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKskUhnTEeaqg9F32W2naQ" base_Element="_iKskUBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKtLYBnTEeaqg9F32W2naQ" base_Element="_iKskUBnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKtLYRnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iKxc0BnTEeaqg9F32W2naQ" base_Element="_iKw1xBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iKxc0RnTEeaqg9F32W2naQ" base_Element="_iKw1xBnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iKxc0hnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iK7N0hnTEeaqg9F32W2naQ" base_Element="_iK7N0BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iK704BnTEeaqg9F32W2naQ" base_Element="_iK7N0BnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iK704RnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_iN9TsxnTEeaqg9F32W2naQ" base_Element="_iN8soxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOBlIBnTEeaqg9F32W2naQ" base_Element="_iOA-EBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOCzQRnTEeaqg9F32W2naQ" base_Element="_iOCMMBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iODaUhnTEeaqg9F32W2naQ" base_Element="_iOCzQhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOEocRnTEeaqg9F32W2naQ" base_Element="_iOEBYBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOFPgxnTEeaqg9F32W2naQ" base_Element="_iOFPgBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOKvEhnTEeaqg9F32W2naQ" base_Element="_iOKvEBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iOLWIBnTEeaqg9F32W2naQ" base_Element="_iOKvEBnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iOLWIRnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_iOOZcBnTEeaqg9F32W2naQ" base_Element="_iONyYBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOPAgBnTEeaqg9F32W2naQ" base_Element="_iOOZcRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOSD0BnTEeaqg9F32W2naQ" base_Element="_iORcwBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOSq4BnTEeaqg9F32W2naQ" base_Element="_iOSD0RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOTR8BnTEeaqg9F32W2naQ" base_Element="_iOSq4RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOT5ABnTEeaqg9F32W2naQ" base_Element="_iOTR8RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOUgEBnTEeaqg9F32W2naQ" base_Element="_iOT5ARnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOVHIBnTEeaqg9F32W2naQ" base_Element="_iOUgERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOVHIhnTEeaqg9F32W2naQ" base_Element="_iOVHIRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOVuMRnTEeaqg9F32W2naQ" base_Element="_iOVuMBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOWVQBnTEeaqg9F32W2naQ" base_Element="_iOVuMhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOW8UBnTEeaqg9F32W2naQ" base_Element="_iOWVQRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOXjYBnTEeaqg9F32W2naQ" base_Element="_iOW8URnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOYKcBnTEeaqg9F32W2naQ" base_Element="_iOXjYRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOYxgBnTEeaqg9F32W2naQ" base_Element="_iOYKcRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOZYkBnTEeaqg9F32W2naQ" base_Element="_iOYxgRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOjJkBnTEeaqg9F32W2naQ" base_Element="_iOiigBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iOjJkRnTEeaqg9F32W2naQ" base_Element="_iOiigBnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iOjwoBnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOkXsBnTEeaqg9F32W2naQ" base_Element="_iOjwoRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iOkXsRnTEeaqg9F32W2naQ" base_Element="_iOjwoRnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iOkXshnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOk-wxnTEeaqg9F32W2naQ" base_Element="_iOk-wBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iOll0BnTEeaqg9F32W2naQ" base_Element="_iOk-wBnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iOll0RnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOmM4xnTEeaqg9F32W2naQ" base_Element="_iOmM4BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iOmz8BnTEeaqg9F32W2naQ" base_Element="_iOmM4BnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iOmz8RnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iOnbABnTEeaqg9F32W2naQ" base_Element="_iOmz8hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iOnbARnTEeaqg9F32W2naQ" base_Element="_iOmz8hnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iOnbAhnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_iOrscBnTEeaqg9F32W2naQ" base_Element="_iOrFYRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iOwk8BnTEeaqg9F32W2naQ" base_Element="_iOv94BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iPFVEhnTEeaqg9F32W2naQ" base_Element="_iPFVERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPF8IhnTEeaqg9F32W2naQ" base_Element="_iPFVExnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Annotations xmi:id="_iPF8IxnTEeaqg9F32W2naQ" base_Element="_iPFVExnTEeaqg9F32W2naQ">
    <annotations xmi:id="_iPF8JBnTEeaqg9F32W2naQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_iPLbsBnTEeaqg9F32W2naQ" base_Element="_iPK0oBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iPVMsBnTEeaqg9F32W2naQ" base_Element="_iPUloBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Generics xmi:id="_iPWa0BnTEeaqg9F32W2naQ" genericsValue="Card" base_Element="_iPVMshnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPe9sBnTEeaqg9F32W2naQ" base_Element="_iPeWoBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPfkwBnTEeaqg9F32W2naQ" base_Element="_iPe9sRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPgL0BnTEeaqg9F32W2naQ" base_Element="_iPfkwRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPhZ8BnTEeaqg9F32W2naQ" dimensions="1" base_Element="_iPgy4BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPhZ8RnTEeaqg9F32W2naQ" base_Element="_iPgy4BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPiBARnTEeaqg9F32W2naQ" base_Element="_iPiBABnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPioEBnTEeaqg9F32W2naQ" base_Element="_iPiBAhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPjPIBnTEeaqg9F32W2naQ" base_Element="_iPioERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPj2MBnTEeaqg9F32W2naQ" base_Element="_iPjPIRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPj2MhnTEeaqg9F32W2naQ" base_Element="_iPj2MRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPkdQRnTEeaqg9F32W2naQ" base_Element="_iPkdQBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPlrYBnTEeaqg9F32W2naQ" base_Element="_iPlEUBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPlrYhnTEeaqg9F32W2naQ" base_Element="_iPlrYRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPmScRnTEeaqg9F32W2naQ" base_Element="_iPmScBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPoHoBnTEeaqg9F32W2naQ" dimensions="2" base_Element="_iPngkBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPousBnTEeaqg9F32W2naQ" dimensions="2" base_Element="_iPoHohnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPoutBnTEeaqg9F32W2naQ" dimensions="2" base_Element="_iPoushnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPp80BnTEeaqg9F32W2naQ" base_Element="_iPpVwBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPqj4BnTEeaqg9F32W2naQ" base_Element="_iPp80hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPrK8BnTEeaqg9F32W2naQ" base_Element="_iPqj4hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPrK8xnTEeaqg9F32W2naQ" base_Element="_iPrK8hnTEeaqg9F32W2naQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iPryABnTEeaqg9F32W2naQ" name="getSuit" method="_iQd1IBnTEeaqg9F32W2naQ">
      <ownedParameter xmi:id="_iPryARnTEeaqg9F32W2naQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPsZERnTEeaqg9F32W2naQ" base_Element="_iPsZEBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPtAIhnTEeaqg9F32W2naQ" base_Element="_iPtAIRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPuOQRnTEeaqg9F32W2naQ" base_Element="_iPuOQBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPu1UBnTEeaqg9F32W2naQ" base_Element="_iPuOQhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPvcYBnTEeaqg9F32W2naQ" base_Element="_iPu1URnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iPvcYhnTEeaqg9F32W2naQ" base_Property="_iPvcYRnTEeaqg9F32W2naQ" siblings="_iQ3dwBnTEeaqg9F32W2naQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPwDcBnTEeaqg9F32W2naQ" base_Element="_iPvcYRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Generics xmi:id="_iPxRkBnTEeaqg9F32W2naQ" genericsValue="Card" base_Element="_iPwqgBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPx4oBnTEeaqg9F32W2naQ" base_Element="_iPwqgBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Array xmi:id="_iPx4oxnTEeaqg9F32W2naQ" base_Element="_iPx4oRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPyfshnTEeaqg9F32W2naQ" base_Element="_iPyfsRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iPzGwRnTEeaqg9F32W2naQ" base_Element="_iPzGwBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP0U4BnTEeaqg9F32W2naQ" base_Element="_iPzt0BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP0U4hnTEeaqg9F32W2naQ" base_Element="_iP0U4RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Generics xmi:id="_iP2xIBnTEeaqg9F32W2naQ" genericsValue="Card" base_Element="_iP2KERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP2xIRnTEeaqg9F32W2naQ" base_Element="_iP2KERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iP3YMBnTEeaqg9F32W2naQ" base_Property="_iP2xIhnTEeaqg9F32W2naQ" siblings="_iQ4r5hnTEeaqg9F32W2naQ _iQ5S8hnTEeaqg9F32W2naQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP3YMRnTEeaqg9F32W2naQ" base_Element="_iP2xIhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP3_QRnTEeaqg9F32W2naQ" base_Element="_iP3_QBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP4mUBnTEeaqg9F32W2naQ" base_Element="_iP3_QhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP4mUhnTEeaqg9F32W2naQ" base_Element="_iP4mURnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP5NYRnTEeaqg9F32W2naQ" base_Element="_iP5NYBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP50cBnTEeaqg9F32W2naQ" base_Element="_iP5NYhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP6bgBnTEeaqg9F32W2naQ" base_Element="_iP50cRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP6bghnTEeaqg9F32W2naQ" base_Element="_iP6bgRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP8QsBnTEeaqg9F32W2naQ" base_Element="_iP7poBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP83wBnTEeaqg9F32W2naQ" base_Element="_iP8QsRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP9e0BnTEeaqg9F32W2naQ" base_Element="_iP83wRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iP_7EBnTEeaqg9F32W2naQ" base_Element="_iP_UARnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Generics xmi:id="_iQAiIBnTEeaqg9F32W2naQ" genericsValue="Hand" base_Element="_iP_7ERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQAiIRnTEeaqg9F32W2naQ" base_Element="_iP_7ERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQBJMBnTEeaqg9F32W2naQ" base_Property="_iQAiIhnTEeaqg9F32W2naQ" siblings="_iQ7IIBnTEeaqg9F32W2naQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQBJMRnTEeaqg9F32W2naQ" base_Element="_iQAiIhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQBwQBnTEeaqg9F32W2naQ" base_Element="_iQBJMhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQC-YRnTEeaqg9F32W2naQ" base_Element="_iQC-YBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQDlcRnTEeaqg9F32W2naQ" base_Element="_iQDlcBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQEMgBnTEeaqg9F32W2naQ" base_Element="_iQDlchnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQEzkBnTEeaqg9F32W2naQ" base_Element="_iQEMgRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQEzkhnTEeaqg9F32W2naQ" base_Element="_iQEzkRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQFaoBnTEeaqg9F32W2naQ" base_Element="_iQEzkxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQGBsBnTEeaqg9F32W2naQ" base_Element="_iQFaoRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQGBshnTEeaqg9F32W2naQ" base_Element="_iQGBsRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQGowBnTEeaqg9F32W2naQ" base_Element="_iQGBsxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQGowhnTEeaqg9F32W2naQ" base_Element="_iQGowRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQHP0RnTEeaqg9F32W2naQ" base_Element="_iQHP0BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQId8BnTEeaqg9F32W2naQ" base_Element="_iQH24BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQId8hnTEeaqg9F32W2naQ" base_Element="_iQId8RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQJFARnTEeaqg9F32W2naQ" base_Element="_iQJFABnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQJsEBnTEeaqg9F32W2naQ" base_Element="_iQJFAhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQJsEhnTEeaqg9F32W2naQ" base_Element="_iQJsERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQKTIRnTEeaqg9F32W2naQ" base_Element="_iQKTIBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQK6MRnTEeaqg9F32W2naQ" base_Element="_iQK6MBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQK6MxnTEeaqg9F32W2naQ" base_Element="_iQK6MhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQLhQRnTEeaqg9F32W2naQ" base_Element="_iQLhQBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQLhQxnTEeaqg9F32W2naQ" base_Element="_iQLhQhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQMIURnTEeaqg9F32W2naQ" base_Element="_iQMIUBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQMvYBnTEeaqg9F32W2naQ" base_Element="_iQMIUhnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQMvYhnTEeaqg9F32W2naQ" base_Property="_iQMvYRnTEeaqg9F32W2naQ" siblings="_iQ-LdBnTEeaqg9F32W2naQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQMvYxnTEeaqg9F32W2naQ" base_Element="_iQMvYRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQNWcRnTEeaqg9F32W2naQ" base_Element="_iQNWcBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQN9gBnTEeaqg9F32W2naQ" base_Element="_iQNWchnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQN9ghnTEeaqg9F32W2naQ" base_Element="_iQN9gRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQN9hBnTEeaqg9F32W2naQ" base_Element="_iQN9gxnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Generics xmi:id="_iQPLoBnTEeaqg9F32W2naQ" genericsValue="Chip" base_Element="_iQOkkBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQPLoRnTEeaqg9F32W2naQ" base_Element="_iQOkkBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQPysBnTEeaqg9F32W2naQ" base_Element="_iQPLohnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQPyshnTEeaqg9F32W2naQ" base_Property="_iQPysRnTEeaqg9F32W2naQ" siblings="_iQ_ZkRnTEeaqg9F32W2naQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQQZwBnTEeaqg9F32W2naQ" base_Element="_iQPysRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQQZwhnTEeaqg9F32W2naQ" base_Property="_iQQZwRnTEeaqg9F32W2naQ" siblings="_iRAAoRnTEeaqg9F32W2naQ _iRAnsRnTEeaqg9F32W2naQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQQZwxnTEeaqg9F32W2naQ" base_Element="_iQQZwRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQRA0RnTEeaqg9F32W2naQ" base_Element="_iQRA0BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQRA0xnTEeaqg9F32W2naQ" base_Element="_iQRA0hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQRn4RnTEeaqg9F32W2naQ" base_Element="_iQRn4BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Generics xmi:id="_iQTdEBnTEeaqg9F32W2naQ" genericsValue="Card" base_Element="_iQS2ABnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQTdERnTEeaqg9F32W2naQ" base_Element="_iQS2ABnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQUEIRnTEeaqg9F32W2naQ" base_Element="_iQUEIBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQUrMBnTEeaqg9F32W2naQ" base_Element="_iQUEIhnTEeaqg9F32W2naQ"/>
  <uml:OpaqueBehavior xmi:id="_iQd1IBnTEeaqg9F32W2naQ" name="getSuit" specification="_iPryABnTEeaqg9F32W2naQ">
    <ownedParameter xmi:id="_iQd1IRnTEeaqg9F32W2naQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </ownedParameter>
    <language>java</language>
    <body>return suit;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQ3dwRnTEeaqg9F32W2naQ" base_Property="_iQ3dwBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQ3dwhnTEeaqg9F32W2naQ" base_Element="_iQ3dwBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQ5S8BnTEeaqg9F32W2naQ" base_Property="_iQ4r5hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQ5S8RnTEeaqg9F32W2naQ" base_Element="_iQ4r5hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQ5S8xnTEeaqg9F32W2naQ" base_Property="_iQ5S8hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQ56ABnTEeaqg9F32W2naQ" base_Element="_iQ5S8hnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQ7IIRnTEeaqg9F32W2naQ" base_Property="_iQ7IIBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQ7vMBnTEeaqg9F32W2naQ" base_Element="_iQ7IIBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQ-LdRnTEeaqg9F32W2naQ" base_Property="_iQ-LdBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iQ-ygBnTEeaqg9F32W2naQ" base_Element="_iQ-LdBnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iQ_ZkhnTEeaqg9F32W2naQ" base_Property="_iQ_ZkRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iRAAoBnTEeaqg9F32W2naQ" base_Element="_iQ_ZkRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iRAAohnTEeaqg9F32W2naQ" base_Property="_iRAAoRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iRAnsBnTEeaqg9F32W2naQ" base_Element="_iRAAoRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_iRAnshnTEeaqg9F32W2naQ" base_Property="_iRAnsRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iRAnsxnTEeaqg9F32W2naQ" base_Element="_iRAnsRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRM08BnTEeaqg9F32W2naQ" base_Element="_iRMN4BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRNcABnTEeaqg9F32W2naQ" base_Element="_iRM08RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRODEBnTEeaqg9F32W2naQ" base_Element="_iRNcARnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iROqIBnTEeaqg9F32W2naQ" base_Element="_iRODERnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRPRMBnTEeaqg9F32W2naQ" base_Element="_iROqIRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRP4QBnTEeaqg9F32W2naQ" base_Element="_iRPRMRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRQfUBnTEeaqg9F32W2naQ" base_Element="_iRP4QRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRRGYBnTEeaqg9F32W2naQ" base_Element="_iRQfURnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRRtcBnTEeaqg9F32W2naQ" base_Element="_iRRGYRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRSUgBnTEeaqg9F32W2naQ" base_Element="_iRRtcRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRS7kBnTEeaqg9F32W2naQ" base_Element="_iRSUgRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRTioBnTEeaqg9F32W2naQ" base_Element="_iRS7kRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRUJsBnTEeaqg9F32W2naQ" base_Element="_iRTioRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRUwwBnTEeaqg9F32W2naQ" base_Element="_iRUJsRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRUwwxnTEeaqg9F32W2naQ" base_Element="_iRUwwRnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRVX0hnTEeaqg9F32W2naQ" base_Element="_iRVX0BnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRV-4BnTEeaqg9F32W2naQ" base_Element="_iRVX0xnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRV-4xnTEeaqg9F32W2naQ" base_Element="_iRV-4RnTEeaqg9F32W2naQ"/>
  <UMLLabProfile:Reference xmi:id="_iRWl8hnTEeaqg9F32W2naQ" base_Element="_iRWl8BnTEeaqg9F32W2naQ"/>
</xmi:XMI>
